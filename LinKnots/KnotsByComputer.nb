(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.2'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[    227679,       4890]*)
(*NotebookOutlinePosition[    228356,       4913]*)
(*  CellTagsIndexPosition[    228312,       4909]*)
(*WindowFrame->Normal*)



Notebook[{
Cell[BoxData[
    \(BeginPackage["\<KnotsByComputer`\>"]\)], "Input",
  InitializationCell->True],

Cell[BoxData[{
    \(GetPdatabyTracking::usage\  = \ \ "\<GetPdatabyTracking[], \
GetPdatabyTracking[PdataFileName] opens a window for input a knot (or link) \
and returns its P-data using an external program MouseTracking.exe. In case \
you specified the PL-data file name, the knot (ot link) digagram for the \
given PL-data will be appeared by right-bottom click in the window. In case \
with no data file, users can draw a knot (or link) on the window by \
mouse-tracking.(This mouse-tracking routine is based on that of SnaPea by \
J.Weeks.) You can change up-down of the crossings by left-botton click around \
the crossing, and also undo the tracking by Delete-key. P-data will be \
returned as an output when you close the window. This function generates a \
file MOUSETRACK.log, which has P-data (for file type) and PL-data of the \
input knot (or link) diagram, and PL-data file LastPLdata.pl.\>"\), "\n", 
    \(\t\t\)}], "Input",
  InitializationCell->True],

Cell[BoxData[{
    \(ShowKnotfromPdata::usage\  = \ "\<ShowKnotfromPdata[Pdata, s:7, \
(options...) ] calls an external program DrawKnot.exe which calculates the \
coordinates of points on the knot (or link) required for drawing. It plots \
the image of the knot (or link) for the given P-data. The second parameter \
's' indicates the number of the side-faces. Options are taken to a graphix \
command of Mathematica, Show[], directly.\>"\ \), "\n", 
    \(\ \)}], "Input",
  InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(ShowKnotFromFile::usage\  = "\<ShowKnotFromFile[PdataFileName] \
plots the image of nots (or links) for the P-data (for file type) given by a \
file. More than one P-data can be given through the file, and notice that EOF \
(or 555) needs to be in the last line of the \
file.\>"\)\(\[IndentingNewLine]\)\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("ShowKnotFromFile[PdataFileName] plots the image of nots (or links) for \
the P-data (for file type) given by a file. More than one P-data can be given \
through the file, and notice that EOF (or 555) needs to be in the last line \
of the file."\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(GetBraidRep::usage\  = \ "\<GetBraidRep[Pdata] calls an external \
program BraidFromSc2.exe. This returns a B-word of a braid representation for \
the given P-data. Untill braid representation for the given P-data is \
obtained, the P-data still in progress is reported. \>"\)\(\t\)\(\
\[IndentingNewLine]\)\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("GetBraidRep[Pdata] calls an external program BraidFromSc2.exe. This \
returns a B-word of a braid representation for the given P-data. Untill braid \
representation for the given P-data is obtained, the P-data still in progress \
is reported. "\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(ShowBraid::usage\  = "\<ShowBraid[Bword,n:4,s:5] draw the braid \
obtained from B-word. B-word can be obtained by GetBraidRep,
		or you can specify by yourself. n and s are options; the larger parameters \
n and s are given, the smoother picture will be obtained.\>"\)\(\ \)\(\n\
\)\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("ShowBraid[Bword,n:4,s:5] draw the braid obtained from B-word. B-word \
can be obtained by GetBraidRep,  or you can specify by yourself. n and s are \
options; the larger parameters n and s are given, the smoother picture will \
be obtained."\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(\[IndentingNewLine]\)\(\(MutationOfTangle::usage = \
"\<MutationOfTangle[P-data] calls an external program Mutatetangle.exe that \
operates mutate related operation on a new window. Tangle operation includes, \
flip, mutate, H-reverse, and V-reverse. After each operation, you can send \
the P-data to the Mathematica.\>"\)\(\[IndentingNewLine]\)\)\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("MutationOfTangle[P-data] calls an external program Mutatetangle.exe \
that operates mutate related operation on a new window. Tangle operation \
includes, flip, mutate, H-reverse, and V-reverse. After each operation, you \
can send the P-data to the Mathematica."\)], "Output"]
}, Open  ]],

Cell[BoxData[{
    \(SkeinPolynomial::usage\  = "\<SkeinPolynomial[type, Pdata] gives 4 \
kinds of polynomials using an external program JonesPol.exe for the given \
P-data. Type 0, 1, -1, and -2 correspond to Jones,two variable Jones, \
Alexander by Conwayrelation, and Conway polynomial respectively.\>"\), "\n", 
    \(\t\t\)}], "Input",
  InitializationCell->True],

Cell[BoxData[{
    \(KauffmanPolynomial::usage = "\<KauffmanPolynomial[Pdata] returns \
Kauffman polynomial for the given P-data using an external program \
KauffmanPol.exe\>"\), "\n", 
    \(\t\t\)}], "Input",
  InitializationCell->True],

Cell[BoxData[{
    \(AlexanderPolynomialbyBurauRep::usage = \
"\<AlexanderPolynomialbyBurauRep[Bword] returns the Alexander polynomial by \
Burau representation for the given B-word using an external program \
BurauAlexPol.exe. 
Notice; Maximum length of B-word is 100, and maximum number of strings is 12, \
therefore characters only A(a) to L(l) are available.\>"\), "\n", 
    \(\t\t\)}], "Input",
  InitializationCell->True],

Cell[BoxData[{
    \(ThreeParallelPolynomialInvariant::usage = \ \
"\<ThreeParallelPolynomialInvariant[Bword] returns one variable reduced \
invariant of the two variable Jones (or HOMFLY) polynomial of 3-parallel \
version for the given B-word using an external program ParallelLink.exe. This \
program needs to use a matrix file in the directory Braid_9, Braid_12, or \
Braid_15. Therefore be sure that these directory are placed in the directory \
K2K. 
Notice; This function needs memory so much. In case of lacking the memory, \
this returns nothing. Both maximum length of B-word and maximum number of \
strings depend on how much momory the machine, you're using, has.\>"\), "\n", \

    \(\t\t\)}], "Input",
  InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(JonesPolynomialbyBraid::usage = "\<JonesPolynomialbyBraid[Bword] \
returns the Jones polynomial by Hecke representation for the given B-word \
using an external program BraidRep.exe.
Notice; Maximum length of B-word is 100, and maximum number of strings is 12, \
therefore characters only A(a) to L(l) are available.\>"\)\(\
\[IndentingNewLine]\)\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("JonesPolynomialbyBraid[Bword] returns the Jones polynomial by Hecke \
representation for the given B-word using an external program BraidRep.exe. \
Notice; Maximum length of B-word is 100, and maximum number of strings is 12, \
therefore characters only A(a) to L(l) are available."\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(JonesPolynomialbyBraidFromFile::usage = \
"\<JonesPolynomialbyBraid[BwordFileName] returns the Jones polynomials by \
Hecke representation for B-words in the B-word File. More than one B-word can \
be given through the file, and notice that EOF (or 555) needs to be in the \
last line of the file.
Notice; Maximum length of B-word is 100, and maximum number of strings is 12, \
therefore characters only A(a) to L(l) are available.\>"\)\(\
\[IndentingNewLine]\)\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("JonesPolynomialbyBraid[BwordFileName] returns the Jones polynomials by \
Hecke representation for B-words in the B-word File. More than one B-word can \
be given through the file, and notice that EOF (or 555) needs to be in the \
last line of the file. Notice; Maximum length of B-word is 100, and maximum \
number of strings is 12, therefore characters only A(a) to L(l) are \
available."\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(ShowKnotbyOpengl::usage = "\<ShowKnotbyOpengl[Pdata] opens a new \
window to draw the knot (or link) diagram for the given P-data rendered by \
OpenGL. You can change outer domain by left-button click around the center of \
the face to be set outer domain. This function calls an external program \
KnotOgl.exe, and this program calls OpenGLKnot.exe which needs \
OpenGLDraw.dll. Be sure that both OpenGLKnot.exe and OpenGLDraw.dll are in \
the directory Knot2000.\>"\)\(\[IndentingNewLine]\)\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("ShowKnotbyOpengl[Pdata] opens a new window to draw the knot (or link) \
diagram for the given P-data rendered by OpenGL. You can change outer domain \
by left-button click around the center of the face to be set outer domain. \
This function calls an external program KnotOgl.exe, and this program calls \
OpenGLKnot.exe which needs OpenGLDraw.dll. Be sure that both OpenGLKnot.exe \
and OpenGLDraw.dll are in the directory Knot2000."\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(KnotFromBraid::usage = "\<KnotFromBraid[Bword] returns the P-data \
for the given B-word using an external program BwordToPword.exe.\>"\)\(\
\[IndentingNewLine]\)\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("KnotFromBraid[Bword] returns the P-data for the given B-word using an \
external program BwordToPword.exe."\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(ReductionKnotLink::usage\  = \ "\<ReductionKnotLink[Pdata] returns \
a P-data of the knot (or link) which was reduced the total number of \
crossings for the given knot (or link) diagram using an external program \
KnotLinkReduction.exe.\>"\)\(\[IndentingNewLine]\)\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("ReductionKnotLink[Pdata] returns a P-data of the knot (or link) which \
was reduced the total number of crossings for the given knot (or link) \
diagram using an external program KnotLinkReduction.exe."\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(SkeinPolynomialFromFile::usage\  = \ \
"\<SkeinPolynomialFromFile[type,PdataFileName] prints the polynomials of the \
type specified by type parameter, for knots (or links) given by P-data (for \
file type) in the file. As for type value, see the usage of SkeinPolynomial. \
More than one P-data can be given through the file, and notice that EOF (or \
555) needs to be in the last line of the file.\>"\)\(\ \ \)\(\
\[IndentingNewLine]\)\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("SkeinPolynomialFromFile[type,PdataFileName] prints the polynomials of \
the type specified by type parameter, for knots (or links) given by P-data \
(for file type) in the file. As for type value, see the usage of \
SkeinPolynomial. More than one P-data can be given through the file, and \
notice that EOF (or 555) needs to be in the last line of the file."\)], \
"Output"]
}, Open  ]],

Cell[BoxData[
    \(\(\(GetMirrorImageKnot\)\(;\)\( (*\ 
      exposing\ to\ the\ public\ context ... *) \)\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \( (*\ To\ keep\ mathlink\ programs\ working, \ 
      we\ need\ to\ expose\ the\ symbols\ they\ define\ in\ the\ \
KnotsByComputer`\ context . \ Otherwise, \ 
      Install\ can' t\ see\ the\ pre - 
        existing\ symbols\ \((in\ KnotsByComputer`Private`)\), \ 
      so\ it\ creates\ new\ ones\ in\ Global` . \ 
          Hopefully\ this\ is\ a\ complete\ list\ of\ the\ required\ \
\(symbols!\)\[IndentingNewLine]\[IndentingNewLine]Scott\ and\ Radmila, \ 
      Feb\ 16\ 2006\ *) \)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \({Showwin, GetDrawData, ReductionKnotLink, BraidToPrd, ShowKnotOpengl, 
      TangleWindow, knotlinkreduction, MirrorImageKnot, GetBraid, 
      JonesTypePolynomial, KauffmanTypePolynomial, KnotByGauseanForm, 
      kicktangleknot, MurakamiInv, SPolynomial, PolynomialKauffman, 
      BurauAlexanderPol, ParallelRep, HeckeRep}\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(Begin["\<`Private`\>"]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\($PolynomialNormal = False;\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(\(GetPdatabyTracking[] := \ 
      GetPdatabyTracking["\<\>"]\[IndentingNewLine]
    GetPdatabyTracking[str_String] := \n\t
      Module[\n\t\t{m, \ link}, \[IndentingNewLine]link\  = \ 
          Install["\<./MouseTracking\>", \ 
            LinkMode -> Launch]; \ \n\t\tm\  = \ 
          Showwin[ToCharacterCode[str]]; \n\t\tUninstall[
          link]; \n\t\tm\n\t\t]\)\(\t\t\t\t\)\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(ShowKnotfromPdata[pdata_List, s_:  7, \ opts___] := \n\t
      Block[\n\t\t{mm, aa, \ link}, \[IndentingNewLine]link\  = \ 
          Install["\<./DrawKnot\>", \ LinkMode -> Launch]; \ \n\t\tmm\  = \ 
          GetDrawData[pdata[\([2]\)], pdata[\([1]\)]]; \n\t\tUninstall[
          link]; \n\t\taa = 
          Table[\ ParametricPlot3D[
              framing[mm[\([h]\)], i, t], {i, 1, Length[mm[\([h]\)]]}, {t, 0, 
                1}, PlotPoints\  -> \ {Length[mm[\([h]\)]], s}, 
              DisplayFunction\  -> Identity], {h, 1, Length[mm]}]; \n\t\tShow[
          aa, opts, DisplayFunction\ \  -> \ $DisplayFunction, \ 
          Ticks\  -> \ None, ViewPoint\  -> {0, 0, 4}, Boxed\  -> False, \ 
          Axes\  -> \ False];\n\t]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(framing[cord_List, \ i_, t_] := \n\t
      Block[\n\t\t{v1, v2, v3, dis, eta, co, si, u, v, tt, k, r, 
          p}, \n\t\teta\  = t\ 2\ Pi; \n\t\tco\  = \ Cos[eta]; \n\t\tsi\  = \ 
          Sin[eta]; \n\t\tr\  = \ 
          0.3; \n\t\tv1\  = \ \ cord[\([i]\)]; \ \n\t\tIf[
          i\  == \ Length[cord], \ v2\  = \ cord[\([2]\)], 
          v2\  = \ cord[\([i + 1]\)]]; \n\t\tv3\  = {v2[\([1]\)]\  - 
              v1[\([1]\)], v2[\([2]\)]\  - v1[\([2]\)], 
            v2[\([3]\)]\  - v1[\([3]\)]}; \n\t\tu\  = \ {\(-v3[\([2]\)]\), 
            v3[\([1]\)], 0.0}; \n\t\tdis\  = \ 
          Sqrt[u[\([1]\)]^2\  + \ u[\([2]\)]^2]; \n\t\ttt\  = \ {r*
              u[\([1]\)]/dis, r*u[\([2]\)]/dis, 
            r*u[\([3]\)]/dis}; \n\t\ \ \ v\  = \ 
          Cross[v3, tt]; \ \n\t\tdis\  = \ 
          Sqrt[v[\([1]\)]^2\  + \ v[\([2]\)]^2\  + \ 
              v[\([3]\)]^2]; \n\t\tk\  = \ {r*v[\([1]\)]/dis, \ 
            r*v[\([2]\)]/dis, 
            r*v[\([3]\)]/dis}; \n\t\tp\  = \ {v2[\([1]\)]\  + \ 
              co*tt[\([1]\)]\  + \ si*k[\([1]\)], 
            v2[\([2]\)]\  + \ co*tt[\([2]\)]\  + \ si*k[\([2]\)], 
            v2[\([3]\)]\  + \ co*tt[\([3]\)]\  + \ 
              si*k[\([3]\)]}; \n\t\t{p[\([1]\)], p[\([2]\)], 
          p[\([3]\)]}\n\t\t]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(\(\n\)\(WritheKnotFromPdata[pdata_] := 
      Apply[Plus, 
        Map[\((If[# < 0, 1, \(-1\)])\) &, pdata[\([2]\)]]]\)\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(\(GetBraidRep[pdata_List] := \n\t
      Block[\n\t\t{gb, pgb, \ link}, \n\t\tpgb\  = \ 
          pdata; \[IndentingNewLine]link\  = \ 
          Install["\<./BraidFromSc2\>", \ LinkMode -> Launch]; \n\t\tgb\  = \ 
          GetBraid[pdata[\([2]\)], pdata[\([1]\)]]; \n\t\tWhile[
          Length[gb]\  == \ 
            3, \n\t\t\tpgb\  = \ {gb[\([3]\)], gb[\([2]\)]}; \n\t\t\tPrint[
            pgb]; \n\t\t\tgb\  = \ 
            GetBraid[gb[\([2]\)], gb[\([3]\)]];\n\t\t\t]; \n\t\tUninstall[
          link]; \n\t\tgb\n\t]\)\(\t\t\)\(\n\)
    \)\)], "Input",
  InitializationCell->True],

Cell[BoxData[""], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(framing2[cord_List, \ i_, t_] := \n\t
      Block[\n\t\t{v1, v2, v3, dis, u, v, tt, k, eta, ett, lcd, ss, co, si, 
          r, p}, \n\t\teta\  = t\ 2\ Pi; \n\t\tr\  = \ 0.1; \n\t\tco\  = \ 
          Cos[eta]; \n\t\tsi\  = \ Sin[eta]; \n\t\tIf[i == 0, 
          v1 = \ \ cord[\([i + 1]\)], v1 = cord[\([i]\)]]; \n\t\tlcd\  = \ 
          Length[cord]; \n\t\tIf[
          lcd == 2 || \ i == lcd || 
            i == 0, \n\t\t\tp\  = \ {v1[\([1]\)], \ v1[\([2]\)] + r*co, 
              v1[\([3]\)] + r*si}, \n\t\t\tv2\  = \ 
            cord[\([i + 1]\)]; \n\t\t\tv3\  = {v2[\([1]\)]\  - v1[\([1]\)], 
              v2[\([2]\)]\  - v1[\([2]\)], 
              v2[\([3]\)]\  - 
                v1[\([3]\)]}; \n\t\t\tu\  = \ {\(-v3[\([2]\)]\), v3[\([1]\)], 
              0.0}; \n\t\t\tdis\  = \ 
            Sqrt[u[\([1]\)]^2\  + \ u[\([2]\)]^2]; \n\t\t\ttt\  = \ {r*
                u[\([1]\)]/dis, r*u[\([2]\)]/dis, 
              r*u[\([3]\)]/dis}; \n\t\t\tv\  = \ 
            Cross[v3, tt]; \ \n\t\t\tdis\  = \ 
            Sqrt[v[\([1]\)]^2\  + \ v[\([2]\)]^2\  + \ 
                v[\([3]\)]^2]; \n\t\t\tk\  = \ {r*v[\([1]\)]/dis, \ 
              r*v[\([2]\)]/dis, 
              r*v[\([3]\)]/dis}; \n\t\t\tp\  = \ {v2[\([1]\)]\  + \ 
                co*tt[\([1]\)]\  + \ si*k[\([1]\)], 
              v2[\([2]\)]\  + \ co*tt[\([2]\)]\  + \ si*k[\([2]\)], 
              v2[\([3]\)]\  + \ co*tt[\([3]\)]\  + \ 
                si*k[\([3]\)]};\n\t\t\t]; \n\t\t{p[\([1]\)], p[\([2]\)], 
          p[\([3]\)]}\n\t]\)], "Input",
  InitializationCell->True],

Cell[BoxData[""], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(basicCord[pp_, up_, rd_] := \n\t
      Block[{ppp, pp2, i, cod, eta}, \n\t\tpp2\  = \ 
          2*pp + 1; \n\t\tcod\  = \ Table[0, {i, pp2}]; \n\t\tppp\  = \ 
          Pi/\((2*pp)\); \n\t\tFor[i = 1, 
          i <= pp, \(i++\), \n\t\t\tIf[i\  == 1, \ j\  = \ 0.0, 
            j = up*0.1*\((i - 2)\)]; \n\t\t\tIf[rd\  == \ 1, \ 
            eta\  = \ Pi/2 - ppp*\((i - 1)\), 
            eta\  = \ \(-Pi\)/2 + 
                ppp*\((i - 1)\)]; \n\t\t\tcod[\([i]\)] = {0.5*Cos[eta], 
              0.5*Sin[eta], \ 
              j}; \n\t\t\tcod[\([pp2 + 1 - i]\)]\  = \ {1.0\  - 
                cod[\([i, 1]\)], 0.0 - cod[\([i, 2]\)], 
              cod[\([i, 3]\)]};\n\t\t\t]; \n\t\tcod[\([pp + 1]\)]\  = \ {0.5, 
            0.0, cod[\([pp, 3]\)]}; \n\t\tcod]\)], "Input",
  InitializationCell->True],

Cell[BoxData[""], "Input",
  InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
    \(expandpower[bnum_] := 
      Block[{i, bnumx = bnum, fp, len, tlen, ch}, 
        tlen = Length[bnum]; \[IndentingNewLine]While[MemberQ[bnumx, 32], 
          bnumx = Delete[bnumx, 
              First[First[
                  Position[bnumx, 
                    32]]]]; \(tlen--\)]; \[IndentingNewLine]While[
          MemberQ[bnumx, 94], 
          len = 0; \[IndentingNewLine]fp = 
            First[First[Position[bnumx, 94]]]; \[IndentingNewLine]bnumx = 
            Delete[bnumx, fp]; \(tlen--\); \[IndentingNewLine]While[
            fp \[LessEqual] tlen && 48 \[LessEqual] bnumx[\([fp]\)] && 
              bnumx[\([fp]\)] \[LessEqual] 57, 
            len *= 10; \[IndentingNewLine]len += 
              bnumx[\([fp]\)] - 48; \[IndentingNewLine]bnumx = 
              Delete[bnumx, fp]; \(tlen--\)]; \[IndentingNewLine]ch = 
            bnumx[\([fp - 1]\)]; \[IndentingNewLine]For[i = 1, 
            i < len, \(i++\), 
            bnumx = Insert[bnumx, ch, 
                fp]; \(tlen++\)]]; \[IndentingNewLine]Return[
          bnumx]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(General::"spell1" \(\(:\)\(\ \)\) 
      "Possible spelling error: new symbol name \"\!\(tlen\)\" is similar to \
existing symbol \"\!\(len\)\"."\)], "Message"],

Cell[BoxData[
    \(General::"spell1" \(\(:\)\(\ \)\) 
      "Possible spelling error: new symbol name \"\!\(bnumx\)\" is similar to \
existing symbol \"\!\(bnum\)\"."\)], "Message"]
}, Open  ]],

Cell[BoxData[
    \(\(\(bwdtonumwd[bwd_] := 
      Block[{bnum, cds, len, i}, 
        bnum = ToCharacterCode[bwd]; \[IndentingNewLine]While[
          MemberQ[bnum, 45], 
          bnum = Delete[bnum, 
              First[First[
                  Position[bnum, 
                    45]]]]; \[IndentingNewLine]Print["\<The character - is \
illegal and so delete it\>"]]; \[IndentingNewLine]bnum = 
          expandpower[bnum]; \  (*Modified\ by\ M . Ochiai*) len = 
          Length[bnum]; \[IndentingNewLine]cds = 
          Table[0, {i, len}]; \[IndentingNewLine]For[i = 1, 
          i \[LessEqual] 
            len, \(i++\), \(If[bnum[\([i]\)] \[GreaterEqual] 97, 
              cds[\([i]\)] = bnum[\([i]\)] - 96, 
              cds[\([i]\)] = 
                64 - bnum[\([i]\)]];\)]; \[IndentingNewLine]cds]\)\(\
\[IndentingNewLine]\)\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\[IndentingNewLine]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(ShowBraid[bwd_, n_:  4, 
        s_:  5] := \n\t\tBlock[\n\t\t{bnum, c, i, j, h, bi, cds, cd, cc, 
          cap1, cap2, low1, low2, cds2, cyl, st}, \n\t\tbnum\  = \ 
          bwdtonumwd[bwd]; \n\t\tc\  = \ 
          Length[bnum]; \t\[IndentingNewLine]\t\ \ \ \ \ st = 
          Abs[bnum[\([1]\)]]; \n\t\tFor[i = 2, 
          i <= c, \(i++\), \n\t\t\tIf[Abs[bnum[\([i]\)]] >= st, \ 
            st = Abs[bnum[\([i]\)]]]]; \n\t\t\t\t\t\t\t\n\t\tcap1\  = 
          framed[basicCord[n, \(-1\), 1], s]; \n\t\tcap2\  = 
          framed[basicCord[n, 1, \(-1\)], s]; \n\t\tlow1\  = 
          framed[basicCord[n, 1, 1], s]; \n\t\tlow2\  = 
          framed[basicCord[n, \(-1\), \(-1\)], s]; \n\t\tcyl\  = \ 
          framed[{{0.0, 0.5, 0.0}, {1.0, 0.5, 0.0}}, 
            s]; \n\t\tcyl\  = {cyl[\([2]\)], 
            cyl[\([3]\)]}; \n\t\t\n\t\tcds\  = \ 
          Table[0, {i, c}, {j, st + 1}]; \n\t\tcd\  = \ 
          Table[0, {j, s}]; \n\t\tcd1\  = \ Table[0, {i, s}]; \n\t\tcd2\  = \ 
          Table[0, {i, s}]; \n\t\tcds2\  = \ 
          Table[0, {i, n*2 + 1}]; \n\t\t\n\t\tFor[i = 1, 
          i <= c, \(i++\), \n\t\t\tbi = bnum[\([i]\)]; \n\t\t\tIf[
            bi\  < \ 0, \ sg\  = \ 1; bi = \(-bi\), 
            sg\  = \(-1\)]; \n\t\t\tFor[j = 1, 
            j <= st + 1, \(j++\), \n\t\t\t\tIf[
              j < bi\  || \ bi + 1 < j, \n\t\t\t\t\tFor[h\  = \ 1, \ 
                h <= s, \(h++\), \n\t\t\t\t\t\tcd1[\([h]\)] = {i - 1, 
                    1.5 - j + cyl[\([1, h, 2]\)], 
                    cyl[\([1, h, 3]\)]}; \n\t\t\t\t\t\tcd2[\([h]\)]\  = {i, 
                    1.5 - j + cyl[\([2, h, 2]\)], 
                    cyl[\([2, h, 3]\)]};]; \n\t\t\t\t\t\tcds[\([i, 
                    j]\)] = {cd1, cd2}, \n\t\t\t\t\t\t\t\n\t\t\t\t\tFor[
                h\  = 1, 
                h <= n*2 + 1, \(h++\), \n\t\t\t\t\t\t\(If[
                    j\  == \ bi, \n\t\t\t\t\t\t\tIf[
                      sg\  == 1, \n\t\t\t\t\t\t\t\tFor[k\  = 1, 
                        k <= s, \(k++\), \n\t\t\t\t\t\t\t\t\tcd[\([k]\)] = {i \
- 1 + cap1[\([h, k, 1]\)], 1.5 - j + cap1[\([h, k, 2]\)], 
                            cap1[\([h, k, 
                                3]\)]}]; \n\t\t\t\t\t\t\t\tcds2[\([h]\)]\  = 
                        cd, \n\t\t\t\t\t\t\t\tFor[k\  = 1, 
                        k <= s, \(k++\), \n\t\t\t\t\t\t\t\t\tcd[\([k]\)] = {i \
- 1 + low1[\([h, k, 1]\)], 1.5 - j + low1[\([h, k, 2]\)], 
                            low1[\([h, k, 
                                3]\)]}]; \n\t\t\t\t\t\t\t\tcds2[\([h]\)]\  = \
\ cd], \n\t\t\t\t\t\t\t\(If[
                        sg\  == 1, \n\t\t\t\t\t\t\t\tFor[k\  = 1, 
                          k <= s, \(k++\), \n\t\t\t\t\t\t\t\t\tcd[\([k]\)] = \
{i - 1 + cap2[\([h, k, 1]\)], 1.5 - j + 1 + cap2[\([h, k, 2]\)], 
                              cap2[\([h, k, 
                                  3]\)]}]; \n\t\t\t\t\t\t\t\tcds2[\([h]\)]\  \
= \ cd, \n\t\t\t\t\t\t\t\tFor[k\  = 1, 
                          k <= s, \(k++\), \n\t\t\t\t\t\t\t\t\tcd[\([k]\)] = \
{i - 1 + low2[\([h, k, 1]\)], 1.5 - j + 1 + low2[\([h, k, 2]\)], 
                              low2[\([h, k, 
                                  3]\)]}]; \n\t\t\t\t\t\t\t\tcds2[\([h]\)]\  \
= \ cd\n\t\t\t\t\t\t\t\t];\)\n\t\t\t\t\t\t\t];\)\n\t\t\t\t\t\t]; \n\t\t\t\t\t\
cds[\([i, j]\)] = cds2\n\t\t\t\t\t]\n\t\t\t]\n\t\t]; \n\t\t\n\t\tcc = 
          Table[\ ParametricPlot3D[
              cds[\([i, j, h, t]\)], {h, 1, Length[cds[\([i, j]\)]]}, {t, 1, 
                s}, PlotPoints\  -> \ {Length[cds[\([i, j]\)]], s}, 
              DisplayFunction\  -> Identity], \n\t\t\t\t\t{i, 1, c}, {j, 1, 
              st + 1}]; \n\t\tShow[cc, 
          DisplayFunction\ \  -> \ $DisplayFunction, \ Ticks\  -> \ None, 
          ViewPoint\  -> {0, 0, 4}];\n\t]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\[IndentingNewLine]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(framed[cord_List, n_] := 
      Block[{i, h, m, mm, pp}, \n\t\tpp\  = \ 
          Table[0, {i, Length[cord] + 1}, {h, n}]; \n\t\tm = \ 0.0; \ 
        mm = 1.0/n; \n\t\tFor[i = 1, 
          i <= Length[cord] + 1, \(i++\), \n\t\t\t\(For[h = 1, 
              h <= n, \(h++\), \n\t\t\t\tpp[\([i, h]\)] = 
                Chop[framing2[cord, i - 1, m]]; \n\t\t\t\tm\  = \ 
                m + mm;\n\t\t\t\t];\)\n\t\t\t]; \n\t\tpp]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\n\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(SkeinPolynomial[type_Integer, \ pdat_List] := \n\t
      Block[{jonespol, pdata, nump, x, y, t, m, \ retcode, \ 
          link}, \[IndentingNewLine]link\  = \ 
          Install["\<./JonesPol\>", \ LinkMode -> Launch]; \n\t\tpdata\  = \ 
          pdat[\([2]\)]; \ nump\  = \ pdat[\([1]\)]; \[IndentingNewLine]\t
        retcode = 
          JonesTypePolynomial[type, pdata, nump]; \[IndentingNewLine]\t
        If[First[retcode] \[Equal] 0, 
          Return[Last[retcode]]]; \n\t\tjonespol\  = 
          ToExpression[
            Last[retcode]]; \[IndentingNewLine]If[$PolynomialNormal \[Equal] 
            True, \[IndentingNewLine]\ \ jonespol = 
            Numerator[Together[jonespol]]]; \n\t
        If[type == 0, \[IndentingNewLine]\t
          jonespol = 
            jonespol\ \  /. \ {x \[Rule] 
                  Sqrt[t]}; \n\t\tPrint["\<Jones Polynomial for \>", \ \
"\<[\>", pdat\ , \ "\<]\>"]]; \n\t
        If[type == \(-1\), \[IndentingNewLine]\t
          jonespol = 
            jonespol\ \  /. \ {x \[Rule] 
                  Sqrt[t]}; \n\t\tPrint["\<Alexander Polynomial for \>", \ \
"\<[\>", \ pdat, \ "\<]\>"]]; \n\t
        If[type == \(-2\), \[IndentingNewLine]\t
          jonespol = 
            jonespol\ \  /. \ {x \[Rule] 
                  Sqrt[t]}; \n\t\tPrint["\<Conway Polynomial for \>", \ \
"\<[\>", pdat, \ "\<]\>"]]; \[IndentingNewLine]\ \ \ \ \ If[
          type == 1, \n\t\ \ \ \ \ \ Print["\<Two variable Jones Polynomial \
for \>", \ "\<[\>", pdat, \ "\<]\>"]]; \n\tUninstall[link]; \n\t
        Return[jonespol]\n\t]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(SPolynomial[type_Integer, \ pdat_List] := \n\t
      Block[{jonespol, pdata, nump, x, y, t, m, retcode}, \n\t\tpdata\  = \ 
          pdat[\([2]\)]; \ 
        nump\  = \ pdat[\([1]\)]; \[IndentingNewLine]retcode = 
          JonesTypePolynomial[type, pdata, nump]; \[IndentingNewLine]\t
        If[First[retcode] \[Equal] 0, 
          Return[Last[retcode]]]; \n\t\tjonespol\  = 
          ToExpression[
            Last[retcode]]; \[IndentingNewLine]If[$PolynomialNormal \[Equal] 
            True, \[IndentingNewLine]\ \ jonespol = 
            Numerator[Together[jonespol]]]; \n\t
        If[type == 0, \[IndentingNewLine]\t
          jonespol = 
            jonespol\ \  /. \ {x \[Rule] 
                  Sqrt[t]}; \n\t\tPrint["\<Jones Polynomial for \>", \ \
"\<[\>", pdat\ , \ "\<]\>"]]; \n\t
        If[type == \(-1\), \[IndentingNewLine]\t
          jonespol = 
            jonespol\ \  /. \ {x \[Rule] 
                  Sqrt[t]}; \n\t\tPrint["\<Alexander Polynomial for \>", \ \
"\<[\>", \ pdat, \ "\<]\>"]]; \n\t
        If[type == \(-2\), \[IndentingNewLine]\t
          jonespol = 
            jonespol\ \  /. \ {x \[Rule] 
                  Sqrt[t]}; \n\t\tPrint["\<Conway Polynomial for \>", \ \
"\<[\>", pdat, \ "\<]\>"]]; \[IndentingNewLine]\ \ \ \ \ If[
          type == 1, \n\t\ \ \ \ \ \ Print["\<Two variable Jones Polynomial \
for \>", \ "\<[\>", pdat, \ "\<]\>"]]; \n\tReturn[jonespol]\n\t]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\[IndentingNewLine]\)], "Input",
  InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
    \(SkeinPolynomialFromFile[type_, str_String] := 
      Block[{snum, n, n2, com, nump, prd, pol, \ 
          link}, \[IndentingNewLine]snum = 
          OpenRead[str]; \[IndentingNewLine]If[snum == $Failed, 
          Print["\<Cannot open \>", str, "\<.\>"]; 
          Return[]]; \[IndentingNewLine]link\  = \ 
          Install["\<./JonesPol\>", \ 
            LinkMode -> Launch]; \[IndentingNewLine]While[
          True, \[IndentingNewLine]n2 = ReadNum[snum]; 
          n = n2/2; \[IndentingNewLine]prd = 
            Table[0, {i, n}]; \[IndentingNewLine]If[
            n2 \[Equal] 555\  || \ n2 \[Equal] 5555, 
            Break[]]; \[IndentingNewLine]com = 
            ReadNum[snum]; \[IndentingNewLine]nump = 
            Table[0, {i, com}]; \[IndentingNewLine]For[i = 1, \ 
            i \[LessEqual] com, \(i++\), \[IndentingNewLine]nump[\([i]\)] = 
              ReadNum[snum]/2]; \[IndentingNewLine]For[i = 1, \ 
            i \[LessEqual] n, \(i++\), \[IndentingNewLine]prd[\([i]\)] = 
              ReadNum[snum]]; \[IndentingNewLine]pol = 
            SPolynomial[type, {nump, prd}]; \[IndentingNewLine]Print[
            pol]]; \[IndentingNewLine]Uninstall[
          link]; \[IndentingNewLine]Close[
          snum]\[IndentingNewLine]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(General::"spell" \(\(:\)\(\ \)\) 
      "Possible spelling error: new symbol name \"\!\(snum\)\" is similar to \
existing symbols \!\({bnum, NSum}\)."\)], "Message"]
}, Open  ]],

Cell[BoxData[
    \(\n\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(KauffmanPolynomial[pdat_] := \n\t
      Block[{polstr, kauffmanpol, pdata, nump, type, \ 
          link}, \n\t\ttype\  = \ 0; \n\t\tpdata\  = \ 
          pdat[\([2]\)]; \ \[IndentingNewLine]\t\ \ \ \ \ nump\  = \ 
          pdat[\([1]\)]; \[IndentingNewLine]link\  = \ 
          Install["\<./KauffmanPol\>", \ 
            LinkMode -> Launch]; \n\t\tpolstr\  = 
          KauffmanTypePolynomial[type, pdata, nump]; \[IndentingNewLine]\t
        If[$PolynomialNormal \[Equal] True, \n\t\tkauffmanpol\  = 
            Numerator[Together[ToExpression[Last[polstr]]]], 
          kauffmanpol = 
            ToExpression[
              Last[polstr]]]\ ; \n\t\tPrint["\<Kauffman Polynomial for \>", \ \
"\<[\>", pdat, \ "\<]\>"]; \n\t\tUninstall[link]; \n\t\tReturn[
          kauffmanpol]\n\t]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(\(KauffmanPolynomial[type_Integer, \ pdat_List] := \n\t
      Block[{polstr, pdata, nump, kauffmanpol, \ link}, \[IndentingNewLine]\t
        pdata\  = \ pdat[\([2]\)]; \ \[IndentingNewLine]\t
        nump\  = \ pdat[\([1]\)]; \[IndentingNewLine]link\  = \ 
          Install["\<./KauffmanPol\>", \ 
            LinkMode -> Launch]; \n\t\ \ \ \ polstr\  = 
          KauffmanTypePolynomial[type, pdata, 
            nump]; \[IndentingNewLine]If[$PolynomialNormal \[Equal] 
            True, \n\t\ \ \ \ kauffmanpol\  = 
            Numerator[Together[ToExpression[Last[polstr]]]], 
          kauffmanpol = 
            ToExpression[
              Last[polstr]]]\ ; \[IndentingNewLine]\ \ \ \ \ \ \ \ \ If[
          type \[Equal] 0, \n\t\tPrint["\<Kauffman Polynomial of \>", 
            pdat], \[IndentingNewLine]\t\ \ \ Print["\<Q-Polynomial of \>", \ 
            pdat]]; \n\t\tUninstall[link]; \n\t\tReturn[
          kauffmanpol]\n\t]\)\(\n\)
    \)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(PolynomialKauffman[type_Integer, \ pdat_List] := \n\t
      Block[{polstr, pdata, nump, pol}, \[IndentingNewLine]\t
        pdata\  = \ pdat[\([2]\)]; \ \[IndentingNewLine]\t
        nump\  = \ pdat[\([1]\)]; \n\t
        polstr\  = 
          KauffmanTypePolynomial[type, pdata, 
            nump]; \[IndentingNewLine]If[$PolynomialNormal \[Equal] 
            True, \[IndentingNewLine]pol\  = 
            Numerator[Together[ToExpression[Last[polstr]]]], 
          pol = ToExpression[Last[polstr]]]\ ; \[IndentingNewLine]If[
          type \[Equal] 0, \n\t\tPrint["\<Kauffman Polynomial of \>", \ 
            pdat], \[IndentingNewLine]Print["\<Q-Polynomial of \>", 
            pdat]]; \n\t\tReturn[pol]\n\t]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(KauffmanPolynomialFromFile[type_Integer, str_String] := 
      Block[{snum, n, n2, com, nump, prd, pol, \ 
          link}, \[IndentingNewLine]snum = 
          OpenRead[str]; \[IndentingNewLine]If[snum == $Failed, 
          Print["\<Cannot open \>", str, "\<.\>"]; 
          Return[]]; \[IndentingNewLine]link\  = \ 
          Install["\<./KauffmanPol\>", \ 
            LinkMode -> Launch]; \[IndentingNewLine]While[
          True, \[IndentingNewLine]n2 = ReadNum[snum]; 
          n = n2/2; \[IndentingNewLine]prd = 
            Table[0, {i, n}]; \[IndentingNewLine]If[
            n2 \[Equal] 555\  || \ n2 \[Equal] 5555, 
            Break[]]; \[IndentingNewLine]com = 
            ReadNum[snum]; \[IndentingNewLine]nump = 
            Table[0, {i, com}]; \[IndentingNewLine]For[i = 1, \ 
            i \[LessEqual] com, \(i++\), \[IndentingNewLine]nump[\([i]\)] = 
              ReadNum[snum]/2]; \[IndentingNewLine]For[i = 1, \ 
            i \[LessEqual] n, \(i++\), \[IndentingNewLine]prd[\([i]\)] = 
              ReadNum[snum]]; \[IndentingNewLine]pol = 
            PolynomialKauffman[type, {nump, prd}]; \[IndentingNewLine]Print[
            pol]]; \[IndentingNewLine]Uninstall[
          link]; \[IndentingNewLine]Close[
          snum]\[IndentingNewLine]]\)], "Input",
  InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
    \(AlexanderPolynomialbyBurauRep[bword_] := 
      Block[{i, c, st, bbwd, polstr, alexpol, \ 
          link}, \[IndentingNewLine]bbwd\  = \ 
          bwdtonumwd[bword]; \[IndentingNewLine]c\  = \ 
          Length[bbwd]; \[IndentingNewLine]If[c > 100, 
          Print["\<B-word is too long.\>"]; Break[]]; \[IndentingNewLine]st = 
          Abs[bbwd[\([1]\)]]; \[IndentingNewLine]For[i = 2, 
          i <= c, \(i++\), \[IndentingNewLine]If[Abs[bbwd[\([i]\)]] >= st, \ 
            st = Abs[bbwd[\([i]\)]]]]; \[IndentingNewLine]bbwd = 
          Prepend[bbwd, st + 1]; \[IndentingNewLine]link\  = \ 
          Install["\<./buraualexpol\>", \ 
            LinkMode -> Launch]; \[IndentingNewLine]polstr\  = 
          BurauAlexanderPol[First[bbwd], 
            bbwd]; \[IndentingNewLine]If[$PolynomialNormal \[Equal] 
            True, \[IndentingNewLine]alexpol = 
            Numerator[Together[ToExpression[polstr]]]\ , 
          alexpol = ToExpression[polstr]]; \[IndentingNewLine]alexpol = 
          alexpol\  /. \ {x \[Rule] 
                t}; \[IndentingNewLine]Print["\<Alexander Polynomial by Burau \
representation for\>", \ "\<[\>", \ 
          bword, \ "\<]\>"]; \[IndentingNewLine]Uninstall[
          link]; \[IndentingNewLine]Return[
          alexpol];\[IndentingNewLine]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(General::"spell1" \(\(:\)\(\ \)\) 
      "Possible spelling error: new symbol name \"\!\(bbwd\)\" is similar to \
existing symbol \"\!\(bwd\)\"."\)], "Message"]
}, Open  ]],

Cell[BoxData[
    \(AlexanderPolynomialbyBurauRepFromFile[str_] := 
      Block[{c, bbwd, st, pol, polex, snum, bword, x, t, \ 
          link}, \[IndentingNewLine]snum = 
          OpenRead[str]; \[IndentingNewLine]If[snum == $Failed, 
          Print["\<Cannot open \>", str, "\<.\>"]; 
          Return[]]; \[IndentingNewLine]link\  = \ 
          Install["\<./buraualexpol\>", \ 
            LinkMode -> Launch]; \[IndentingNewLine]While[
          True, \[IndentingNewLine]bword = 
            Read[snum, String]; \[IndentingNewLine]If[
            bword \[Equal] "\<555\>"\  || \ 
              bword \[Equal] "\<5555\>", \[IndentingNewLine]Break[]]; \
\[IndentingNewLine]bbwd = bwdtonumwd[bword]; \[IndentingNewLine]c\  = \ 
            Length[bbwd]; \[IndentingNewLine]If[c > 100, 
            Print["\<B-word is too long.\>"]; 
            Break[]]; \[IndentingNewLine]st = 
            Abs[bbwd[\([1]\)]]; \[IndentingNewLine]For[i = 2, 
            i <= c, \(i++\), \n\t\tIf[Abs[bbwd[\([i]\)]] >= st, \ 
              st = Abs[bbwd[\([i]\)]]]]; \[IndentingNewLine]bbwd = 
            Prepend[bbwd, st + 1]; \[IndentingNewLine]pol = 
            BurauAlexanderPol[First[bbwd], 
              bbwd]; \[IndentingNewLine]If[$PolynomialNormal \[Equal] 
              True, \[IndentingNewLine]polex = 
              Numerator[Together[ToExpression[pol]]], 
            polex = ToExpression[pol]]; \[IndentingNewLine]polex = 
            polex\  /. \ {x \[Rule] 
                  t}; \[IndentingNewLine]Print["\<Alexander Polynomial by \
Burau representation for\>", \ "\<[\>", \ 
            bword, \ "\<]\>"]; \[IndentingNewLine]Print[
            polex]]; \[IndentingNewLine]Uninstall[
          link]; \[IndentingNewLine]Close[
          snum]\[IndentingNewLine]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\n\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(ThreeParallelPolynomialInvariant[
        bword_] := \[IndentingNewLine]Block[{i, x, \ q, \ bbwd, polstr, 
          jonespol, c, st, wythe, \ ex, link}, \[IndentingNewLine]bbwd\  = \ 
          bwdtonumwd[bword]; \[IndentingNewLine]c\  = \ 
          Length[bbwd]; \[IndentingNewLine]If[c > 100, 
          Print["\<B-word is too long.\>"]; Break[]]; \[IndentingNewLine]st = 
          Abs[bbwd[\([1]\)]]; \[IndentingNewLine]wythe = 
          0; \[IndentingNewLine]If[
          bbwd[\([1]\)] > 
            0, \(wythe++\), \(wythe--\)]; \[IndentingNewLine]For[i = 2, 
          i <= c, \(i++\), \[IndentingNewLine]If[
            bbwd[\([i]\)] > 
              0, \(wythe++\), \(wythe--\)]; \[IndentingNewLine]If[
            Abs[bbwd[\([i]\)]] >= st, \ 
            st = Abs[bbwd[\([i]\)]]]]; \[IndentingNewLine]bbwd = 
          Prepend[bbwd, st + 1]; \[IndentingNewLine]link\  = \ 
          Install["\<./ParallelLink\>", \ 
            LinkMode -> Launch]; \[IndentingNewLine]polstr\  = 
          ParallelRep[First[bbwd], bbwd]; \[IndentingNewLine]wythe = 
          3*wythe; \[IndentingNewLine]jonespol\  = 
          ToExpression[polstr]; \[IndentingNewLine]jonespol = \ 
          jonespol\  /. \ {x -> 
                Sqrt[q]}; \[IndentingNewLine]ex = \((q^\((3/2)\))\)^
            wythe; \[IndentingNewLine]jonespol = 
          ex*jonespol; \[IndentingNewLine]ex = \((1 - 
                q^4)\)/\((q^\((3/2)\) \((1 - 
                    q)\))\); \[IndentingNewLine]jonespol = 
          jonespol*ex^\((3*\((st + 1)\) - 1)\); \[IndentingNewLine]ex = 
          q^2*\((1 + q + q\^2 + q\^3)\)^\((\(-3\) \((st + 1)\))\)/\((1 + q + 
                  q\^2 + q\^3 + q\^4)\); \[IndentingNewLine]jonespol = 
          jonespol\ *
            ex; \[IndentingNewLine]Print["\<3-parallel one variable invariant \
for \>", \ "\<[\>", \ bword, \ "\<]\>"]; \[IndentingNewLine]Uninstall[
          link]; \[IndentingNewLine]jonespol = 
          Simplify[Expand[jonespol]]; \[IndentingNewLine]If[
          jonespol \[Equal] \(-1\), jonespol = 1]; \[IndentingNewLine]If[
          jonespol != 1, 
          jonespol = Simplify[jonespol/ex]]; \[IndentingNewLine]Return[
          jonespol]\[IndentingNewLine]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\[IndentingNewLine]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(JonesPolynomialbyBraid[
        bword_] := \[IndentingNewLine]Block[{bbwd, pol, polex, x, t, c, st, \ 
          link}, \[IndentingNewLine]bbwd = 
          bwdtonumwd[bword]; \[IndentingNewLine]c\  = \ 
          Length[bbwd]; \[IndentingNewLine]If[c > 100, 
          Print["\<B-word is too long.\>"]; Break[]]; \[IndentingNewLine]st = 
          Abs[bbwd[\([1]\)]]; \[IndentingNewLine]For[i = 2, 
          i <= c, \(i++\), \n\t\tIf[Abs[bbwd[\([i]\)]] >= st, \ 
            st = Abs[bbwd[\([i]\)]]]]; \[IndentingNewLine]bbwd = 
          Prepend[bbwd, st + 1]; \[IndentingNewLine]link\  = \ 
          Install["\<./braidrep\>", \ 
            LinkMode -> Launch]; \[IndentingNewLine]pol = 
          HeckeRep[First[bbwd], 
            bbwd]; \[IndentingNewLine]If[$PolynomialNormal \[Equal] 
            True, \[IndentingNewLine]polex = 
            Numerator[Together[ToExpression[pol]]], 
          polex = ToExpression[pol]]; \[IndentingNewLine]polex = 
          polex\  /. \ {x \[Rule] 
                Sqrt[t]}; \[IndentingNewLine]Print["\<Jones Polynomial by \
Hecke representation for [\>", 
          bword, \ "\<]\>"]; \[IndentingNewLine]Uninstall[
          link]; \[IndentingNewLine]Return[
          polex];\[IndentingNewLine]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\[IndentingNewLine]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(JonesPolynomialbyBraidFromFile[str_] := 
      Block[{c, bbwd, st, pol, polex, snum, bword, x, t, \ 
          link}, \[IndentingNewLine]snum = 
          OpenRead[str]; \[IndentingNewLine]If[snum == $Failed, 
          Print["\<Cannot open \>", str, "\<.\>"]; 
          Return[]]; \[IndentingNewLine]link = 
          Install["\<./braidrep\>", \ 
            LinkMode -> Launch]; \[IndentingNewLine]While[
          True, \[IndentingNewLine]bword = 
            Read[snum, String]; \[IndentingNewLine]If[
            bword \[Equal] "\<555\>"\  || \ 
              bword \[Equal] "\<5555\>", \[IndentingNewLine]Break[]]; \
\[IndentingNewLine]bbwd = bwdtonumwd[bword]; \[IndentingNewLine]c\  = \ 
            Length[bbwd]; \[IndentingNewLine]If[c > 100, 
            Print["\<B-word is too long.\>"]; 
            Break[]]; \[IndentingNewLine]st = 
            Abs[bbwd[\([1]\)]]; \[IndentingNewLine]For[i = 2, 
            i <= c, \(i++\), \n\t\tIf[Abs[bbwd[\([i]\)]] >= st, \ 
              st = Abs[bbwd[\([i]\)]]]]; \[IndentingNewLine]bbwd = 
            Prepend[bbwd, st + 1]; \[IndentingNewLine]pol = 
            HeckeRep[First[bbwd], 
              bbwd]; \[IndentingNewLine]If[$PolynomialNormal \[Equal] 
              True, \[IndentingNewLine]polex = 
              Numerator[Together[ToExpression[pol]]], 
            polex = ToExpression[pol]]; \[IndentingNewLine]polex = 
            polex\  /. \ {x \[Rule] 
                  Sqrt[t]}; \[IndentingNewLine]Print["\<Jones Polynomial by \
Hecke representation for [\>", bword, "\<]\>"]; \[IndentingNewLine]Print[
            polex]]; \[IndentingNewLine]Uninstall[
          link]; \[IndentingNewLine]Close[
          snum]\[IndentingNewLine]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\[IndentingNewLine]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(ReductionKnotLink[pdata_List] := 
      Block[{prd, \ link}, \[IndentingNewLine]link = 
          Install["\<./KnotLinkReduction\>", \ LinkMode -> Launch]; \n\t
        prd\  = \ knotlinkreduction[pdata[\([2]\)], pdata[\([1]\)]]; \n\t
        Uninstall[link]; \[IndentingNewLine]\tReturn[prd]\n]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\[IndentingNewLine]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(GetMirrorImageKnot[pdata_List] := 
      Block[{prd, \ link}, \[IndentingNewLine]link = 
          Install["\<./MirrorImage\>", \ 
            LinkMode -> Launch]; \[IndentingNewLine]prd = 
          MirrorImageKnot[pdata[\([2]\)], 
            pdata[\([1]\)]]; \[IndentingNewLine]Uninstall[
          link]; \[IndentingNewLine]Return[
          prd]\[IndentingNewLine]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(\(MutationOfTangle[pdata_List] := 
      Block[{prd, \ link}, \[IndentingNewLine]link = 
          Install["\<./MutateTangle\>", \ 
            LinkMode -> Launch]; \[IndentingNewLine]\ \ \ prd = 
          TangleWindow[pdata[\([2]\)], 
            pdata[\([1]\)]]; \[IndentingNewLine]Uninstall[
          link]; \[IndentingNewLine]Return[prd]]\)\(\[IndentingNewLine]\)
    \)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\[IndentingNewLine]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(ShowKnotbyOpengl[pdata_List] := 
      Block[{link}, \[IndentingNewLine]link = 
          Install["\<./KnotOgl\>", \ 
            LinkMode -> Launch]; \[IndentingNewLine]ShowKnotOpengl[
          pdata[\([2]\)], pdata[\([1]\)]]; \[IndentingNewLine]Uninstall[
          link]\[IndentingNewLine]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\[IndentingNewLine]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(KnotFromBraid[braid_String] := 
      Block[{bnum, size, prd, \ link}, \[IndentingNewLine]bnum = 
          bwdtonumwd[braid]; \[IndentingNewLine]size = 
          Max[Map[\((Abs[#])\) &, bnum]] + 1; \[IndentingNewLine]link = 
          Install["\<./BwordToPword\>", \ 
            LinkMode -> Launch]; \[IndentingNewLine]prd = 
          BraidToPrd[bnum, size]; \[IndentingNewLine]Uninstall[
          link]; \[IndentingNewLine]prd\[IndentingNewLine]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\[IndentingNewLine]\)], "Input",
  InitializationCell->True],

Cell[BoxData[{
    \(ReadNum[snum_] := 
      Module[{num}, \[IndentingNewLine]num = 
          Read[snum, Number]; \[IndentingNewLine]While[\(! NumberQ[num]\), 
          num = Read[snum, 
              Number]]; \[IndentingNewLine]num\[IndentingNewLine]]\), "\
\[IndentingNewLine]", 
    \(TransformPrdOfFile[str_String] := 
      Block[{snum, n, n2, com, nump, prd}, \[IndentingNewLine]snum = 
          OpenRead[str]; \[IndentingNewLine]While[
          True, \[IndentingNewLine]n2 = ReadNum[snum]; 
          n = n2/2; \[IndentingNewLine]prd = 
            Table[0, {i, n}]; \[IndentingNewLine]If[n2 \[Equal] 555, 
            Break[]]; \[IndentingNewLine]com = 
            ReadNum[snum]; \[IndentingNewLine]nump = 
            Table[0, {i, com}]; \[IndentingNewLine]For[i = 1, \ 
            i \[LessEqual] com, \(i++\), \[IndentingNewLine]nump[\([i]\)] = 
              ReadNum[snum]/2]; \[IndentingNewLine]For[i = 1, \ 
            i \[LessEqual] n, \(i++\), \[IndentingNewLine]prd[\([i]\)] = 
              ReadNum[snum]]; \[IndentingNewLine]Print[{nump, 
              prd}]]; \[IndentingNewLine]Close[
          snum]\[IndentingNewLine]]\)}], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\[IndentingNewLine]\)], "Input",
  InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
    \(ShowKnotFronFile[str_String] := 
      Block[{snum, n, n2, com, nump, prd}, \[IndentingNewLine]snum = 
          OpenRead[str]; \[IndentingNewLine]If[snum == $Failed, 
          Print["\<Cannot open \>", str, "\<.\>"]; Return[]]; 
        While[True, \[IndentingNewLine]n2 = ReadNum[snum]; 
          n = n2/2; \[IndentingNewLine]prd = 
            Table[0, {i, n}]; \[IndentingNewLine]If[
            n2 \[Equal] 555\  || \ n2 \[Equal] 5555, 
            Break[]]; \[IndentingNewLine]com = 
            ReadNum[snum]; \[IndentingNewLine]nump = 
            Table[0, {i, com}]; \[IndentingNewLine]For[i = 1, \ 
            i \[LessEqual] com, \(i++\), \[IndentingNewLine]nump[\([i]\)] = 
              ReadNum[snum]/2]; \[IndentingNewLine]For[i = 1, \ 
            i \[LessEqual] n, \(i++\), \[IndentingNewLine]prd[\([i]\)] = 
              ReadNum[snum]]; \[IndentingNewLine]ShowKnotfromPdata[{nump, 
              prd}]]; \[IndentingNewLine]Close[
          snum]\[IndentingNewLine]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(General::"spell1" \(\(:\)\(\ \)\) 
      "Possible spelling error: new symbol name \"\!\(ShowKnotFronFile\)\" is \
similar to existing symbol \"\!\(ShowKnotFromFile\)\"."\)], "Message"]
}, Open  ]],

Cell[BoxData[
    \(\[IndentingNewLine]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(GetBraidRepFromFile[str_String, otype_Integer:  0] := \n\t
      Block[\n\t\t{gb, pgb, snum, n, n2, com, n0 = 0, com0 = 0, nump, prd, 
          pdata, rep, ofile, totalcount, link}, \[IndentingNewLine]snum = 
          OpenRead[str]; \[IndentingNewLine]If[snum == $Failed, 
          Print["\<Cannot open \>", str, "\<.\>"]; 
          Return[]]; \[IndentingNewLine]link = 
          Install["\<./BraidFromSc2\>", \ 
            LinkMode -> Launch]; \[IndentingNewLine]If[otype \[NotEqual] 0, 
          ofile = OpenWrite["\<BraidForm.brd\>"]]; \
\[IndentingNewLine]totalcount = 0; \[IndentingNewLine]While[
          True, \[IndentingNewLine]n2 = ReadNum[snum]; 
          n = n2/2; \[IndentingNewLine]If[n \[NotEqual] n0, n0 = n; 
            prd = Table[0, {i, n}]]; \[IndentingNewLine]If[
            n2 \[Equal] 555\  || \ n2 \[Equal] 5555, 
            Break[]]; \[IndentingNewLine]\(totalcount++\); \
\[IndentingNewLine]com = ReadNum[snum]; \[IndentingNewLine]If[
            com \[NotEqual] com0, com0 = com; 
            nump = Table[0, {i, com}]]; \[IndentingNewLine]For[i = 1, \ 
            i \[LessEqual] com, \(i++\), \[IndentingNewLine]nump[\([i]\)] = 
              ReadNum[snum]/2]; \[IndentingNewLine]For[i = 1, \ 
            i \[LessEqual] n, \(i++\), \[IndentingNewLine]prd[\([i]\)] = 
              ReadNum[snum]]; \[IndentingNewLine]pdata = {nump, 
              prd}; \[IndentingNewLine]rep = 1; \[IndentingNewLine]If[
            otype\  \[NotEqual] 2, Print[pdata], 
            If[Mod[totalcount, 100] \[Equal] 0, 
              Print[totalcount]]]; \n\ \ \ \ \ \ \ Label[
            back]; \[IndentingNewLine]pgb\  = \ 
            pdata; \[IndentingNewLine]gb\  = \ 
            GetBraid[pdata[\([2]\)], pdata[\([1]\)]]; \n\ \ \ \ \ \ \ While[
            Length[gb]\  == \ 
              3, \n\t\tpgb\  = \ {gb[\([3]\)], gb[\([2]\)]}; \n\t\tgb\  = \ 
              GetBraid[gb[\([2]\)], 
                gb[\([3]\)]];\n\ \ \ \ \ \ \ ]; \[IndentingNewLine]If[
            rep < n\  && \ MemberQ[ToCharacterCode[gb], 64], 
            pdata = ReductionKnotLink[pdata]; 
            Print[totalcount, "\<:Retry-> \>", rep]; \(rep++\); 
            Goto[back]]; \[IndentingNewLine]If[otype \[Equal] 0, \n\t
            Print[gb], \[IndentingNewLine]WriteString[ofile, 
              StringInsert[
                gb, "\<\n\>", \(-1\)]]];\[IndentingNewLine]]; \
\[IndentingNewLine]Close[snum]; \[IndentingNewLine]Uninstall[
          link]; \[IndentingNewLine]If[otype \[NotEqual] 0, 
          WriteString[ofile, "\<555\n\>"]; Close[ofile]; 
          Print["\<The output data was stored in BraidForm.brd\>"]; \
\[IndentingNewLine]Print["\<If you would want to see the result, please keyin \
!!BraidForm.brd\>"];\[IndentingNewLine]]\n]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(\(\[IndentingNewLine]\)\(\(SQTable = {\[IndentingNewLine]{1 - \
\[Lambda]\ q, q - \[Lambda]\ q, q^2 - \[Lambda]\ q, q^3 - \[Lambda]\ q, 
            q^4 - \[Lambda]\ q, q^5 - \[Lambda]\ q, q^6 - \[Lambda]\ q, 
            q^7 - \[Lambda]\ q, 
            q^8 - \[Lambda]\ q, \[IndentingNewLine]q^9 - \[Lambda]\ q, 
            q^10 - \[Lambda]\ q, q^11 - \[Lambda]\ q, q^12 - \[Lambda]\ q, 
            q^13 - \[Lambda]\ q, 
            q^14 - \[Lambda]\ q}, \[IndentingNewLine]{1 - \[Lambda]\ q^2, 
            q - \[Lambda]\ q^2, q^2 - \[Lambda]\ q^2, q^3 - \[Lambda]\ q^2, 
            q^4 - \[Lambda]\ q^2, q^5 - \[Lambda]\ q^2, q^6 - \[Lambda]\ q^2, 
            q^7 - \[Lambda]\ q^2, q^8 - \[Lambda]\ q^2, q^9 - \[Lambda]\ q^2, 
            q^10 - \[Lambda]\ q^2, q^11 - \[Lambda]\ q^2, 
            q^12 - \[Lambda]\ q^2, q^13 - \[Lambda]\ q^2, 
            q^14 - \[Lambda]\ q^2}, \[IndentingNewLine]{1 - \[Lambda]\ q^3, 
            q - \[Lambda]\ q^3, q^2 - \[Lambda]\ q^3, q^3 - \[Lambda]\ q^3, 
            q^4 - \[Lambda]\ q^3, q^5 - \[Lambda]\ q^3, q^6 - \[Lambda]\ q^3, 
            q^7 - \[Lambda]\ q^3, q^8 - \[Lambda]\ q^3, q^9 - \[Lambda]\ q^3, 
            q^10 - \[Lambda]\ q^3, q^11 - \[Lambda]\ q^3, 
            q^12 - \[Lambda]\ q^3, q^13 - \[Lambda]\ q^3, 
            q^14 - \[Lambda]\ q^3}, \[IndentingNewLine]{1 - \[Lambda]\ q^4, 
            q - \[Lambda]\ q^4, q^2 - \[Lambda]\ q^4, q^3 - \[Lambda]\ q^4, 
            q^4 - \[Lambda]\ q^4, q^5 - \[Lambda]\ q^4, q^6 - \[Lambda]\ q^4, 
            q^7 - \[Lambda]\ q^4, q^8 - \[Lambda]\ q^4, q^9 - \[Lambda]\ q^4, 
            q^10 - \[Lambda]\ q^4, q^11 - \[Lambda]\ q^4, 
            q^12 - \[Lambda]\ q^4, q^13 - \[Lambda]\ q^4, 
            q^14 - \[Lambda]\ q^4}, \[IndentingNewLine]{1 - \[Lambda]\ q^5, 
            q - \[Lambda]\ q^5, q^2 - \[Lambda]\ q^5, q^3 - \[Lambda]\ q^5, 
            q^4 - \[Lambda]\ q^5, q^5 - \[Lambda]\ q^5, q^6 - \[Lambda]\ q^5, 
            q^7 - \[Lambda]\ q^5, q^8 - \[Lambda]\ q^5, q^9 - \[Lambda]\ q^5, 
            q^10 - \[Lambda]\ q^5, q^11 - \[Lambda]\ q^5, 
            q^12 - \[Lambda]\ q^5, q^13 - \[Lambda]\ q^5, 
            q^14 - \[Lambda]\ q^5}, \[IndentingNewLine]{1 - \[Lambda]\ q^6, 
            q - \[Lambda]\ q^6, q^2 - \[Lambda]\ q^6, q^3 - \[Lambda]\ q^6, 
            q^4 - \[Lambda]\ q^6, q^5 - \[Lambda]\ q^6, q^6 - \[Lambda]\ q^6, 
            q^7 - \[Lambda]\ q^6, q^8 - \[Lambda]\ q^6, q^9 - \[Lambda]\ q^6, 
            q^10 - \[Lambda]\ q^6, q^11 - \[Lambda]\ q^6, 
            q^12 - \[Lambda]\ q^6, q^13 - \[Lambda]\ q^6, 
            q^14 - \[Lambda]\ q^6}, \[IndentingNewLine]{1 - \[Lambda]\ q^7, 
            q - \[Lambda]\ q^7, q^2 - \[Lambda]\ q^7, q^3 - \[Lambda]\ q^7, 
            q^4 - \[Lambda]\ q^7, q^5 - \[Lambda]\ q^7, q^6 - \[Lambda]\ q^7, 
            q^7 - \[Lambda]\ q^7, q^8 - \[Lambda]\ q^7, q^9 - \[Lambda]\ q^7, 
            q^10 - \[Lambda]\ q^7, q^11 - \[Lambda]\ q^7, 
            q^12 - \[Lambda]\ q^7, q^13 - \[Lambda]\ q^7, 
            q^14 - \[Lambda]\ q^7}, \[IndentingNewLine]{1 - \[Lambda]\ q^8, 
            q - \[Lambda]\ q^8, q^2 - \[Lambda]\ q^8, q^3 - \[Lambda]\ q^8, 
            q^4 - \[Lambda]\ q^8, q^5 - \[Lambda]\ q^8, q^6 - \[Lambda]\ q^8, 
            q^7 - \[Lambda]\ q^8, q^8 - \[Lambda]\ q^8, q^9 - \[Lambda]\ q^8, 
            q^10 - \[Lambda]\ q^8, q^11 - \[Lambda]\ q^8, 
            q^12 - \[Lambda]\ q^8, q^13 - \[Lambda]\ q^8, 
            q^14 - \[Lambda]\ q^8}, \[IndentingNewLine]{1 - \[Lambda]\ q^9, 
            q - \[Lambda]\ q^9, q^2 - \[Lambda]\ q^9, q^3 - \[Lambda]\ q^9, 
            q^4 - \[Lambda]\ q^9, q^5 - \[Lambda]\ q^9, q^6 - \[Lambda]\ q^9, 
            q^7 - \[Lambda]\ q^9, q^8 - \[Lambda]\ q^9, q^9 - \[Lambda]\ q^9, 
            q^10 - \[Lambda]\ q^9, q^11 - \[Lambda]\ q^9, 
            q^12 - \[Lambda]\ q^9, q^13 - \[Lambda]\ q^9, 
            q^14 - \[Lambda]\ q^9}, \[IndentingNewLine]{1 - \[Lambda]\ q^10, 
            q - \[Lambda]\ q^10, q^2 - \[Lambda]\ q^10, 
            q^3 - \[Lambda]\ q^10, q^4 - \[Lambda]\ q^10, 
            q^5 - \[Lambda]\ q^10, q^6 - \[Lambda]\ q^10, 
            q^7 - \[Lambda]\ q^10, q^8 - \[Lambda]\ q^10, 
            q^9 - \[Lambda]\ q^10, q^10 - \[Lambda]\ q^10, 
            q^11 - \[Lambda]\ q^10, q^12 - \[Lambda]\ q^10, 
            q^13 - \[Lambda]\ q^10, 
            q^14 - \[Lambda]\ q^10}, \[IndentingNewLine]{1 - \[Lambda]\ q^11, 
            q - \[Lambda]\ q^11, q^2 - \[Lambda]\ q^11, 
            q^3 - \[Lambda]\ q^11, q^4 - \[Lambda]\ q^11, 
            q^5 - \[Lambda]\ q^11, q^6 - \[Lambda]\ q^11, 
            q^7 - \[Lambda]\ q^11, q^8 - \[Lambda]\ q^11, 
            q^9 - \[Lambda]\ q^11, q^10 - \[Lambda]\ q^11, 
            q^11 - \[Lambda]\ q^11, q^12 - \[Lambda]\ q^11, 
            q^13 - \[Lambda]\ q^11, 
            q^14 - \[Lambda]\ q^11}, \[IndentingNewLine]{1 - \[Lambda]\ q^12, 
            q - \[Lambda]\ q^12, q^2 - \[Lambda]\ q^12, 
            q^3 - \[Lambda]\ q^12, q^4 - \[Lambda]\ q^12, 
            q^5 - \[Lambda]\ q^12, q^6 - \[Lambda]\ q^12, 
            q^7 - \[Lambda]\ q^12, q^8 - \[Lambda]\ q^12, 
            q^9 - \[Lambda]\ q^12, q^10 - \[Lambda]\ q^12, 
            q^11 - \[Lambda]\ q^12, q^12 - \[Lambda]\ q^12, 
            q^13 - \[Lambda]\ q^12, 
            q^14 - \[Lambda]\ q^12}, \[IndentingNewLine]{1 - \[Lambda]\ q^13, 
            q - \[Lambda]\ q^13, q^2 - \[Lambda]\ q^13, 
            q^3 - \[Lambda]\ q^13, q^4 - \[Lambda]\ q^13, 
            q^5 - \[Lambda]\ q^13, q^6 - \[Lambda]\ q^13, 
            q^7 - \[Lambda]\ q^13, q^8 - \[Lambda]\ q^13, 
            q^9 - \[Lambda]\ q^13, q^10 - \[Lambda]\ q^13, 
            q^11 - \[Lambda]\ q^13, q^12 - \[Lambda]\ q^13, 
            q^13 - \[Lambda]\ q^13, 
            q^14 - \[Lambda]\ q^13}, \[IndentingNewLine]{1 - \[Lambda]\ q^14, 
            q - \[Lambda]\ q^14, q^2 - \[Lambda]\ q^14, 
            q^3 - \[Lambda]\ q^14, q^4 - \[Lambda]\ q^14, 
            q^5 - \[Lambda]\ q^14, q^6 - \[Lambda]\ q^14, 
            q^7 - \[Lambda]\ q^14, q^8 - \[Lambda]\ q^14, 
            q^9 - \[Lambda]\ q^14, q^10 - \[Lambda]\ q^14, 
            q^11 - \[Lambda]\ q^14, q^12 - \[Lambda]\ q^14, 
            q^13 - \[Lambda]\ q^14, 
            q^14 - \[Lambda]\ q^14}, \[IndentingNewLine]{1 - \[Lambda]\ q^15, 
            q - \[Lambda]\ q^15, q^2 - \[Lambda]\ q^15, 
            q^3 - \[Lambda]\ q^15, q^4 - \[Lambda]\ q^15, 
            q^5 - \[Lambda]\ q^15, q^6 - \[Lambda]\ q^15, 
            q^7 - \[Lambda]\ q^15, 
            q^8 - \[Lambda]\ q^15, \[IndentingNewLine]q^9 - \[Lambda]\ q^15, 
            q^10 - \[Lambda]\ q^15, q^11 - \[Lambda]\ q^15, 
            q^12 - \[Lambda]\ q^15, q^13 - \[Lambda]\ q^15, 
            q^14 - \[Lambda]\ q^15}};\)\(\[IndentingNewLine]\)\(\ \ \ \ \ \ \ \
\ \)\)\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[{
    \(ComputeWeight[yg_, dpt_] := 
      Block[{i, j, k, t, q, len, polnum, polden, hook, 
          hooktable}, \[IndentingNewLine]hooktable = 
          Table[0, {i, 16}, {j, 16}]; \[IndentingNewLine]len = 
          Length[yg]; \[IndentingNewLine]For\ [i = 1, 
          i <= dpt, \ \(i++\), \[IndentingNewLine]For\ [j = 1, \ 
            i \[LessEqual] len\  && \ 
              j \[LessEqual] 
                yg[\([i]\)], \ \(j++\), \[IndentingNewLine]hooktable[\([j, 
                  i]\)] = 1]]; \[IndentingNewLine]polnum = 1; 
        polden = 1; \[IndentingNewLine]For\ [i = 1, 
          i <= dpt, \ \(i++\), \ \[IndentingNewLine]For[j = 1, 
            i \[LessEqual] len\  && \ 
              j \[LessEqual] 
                yg[\([i]\)], \(j++\), \ \[IndentingNewLine]polnum\  *= \ 
              SQTable[\([j, i]\)]; \[IndentingNewLine]hook = 
              0; \[IndentingNewLine]For[k = j, 
              i \[LessEqual] len\  && \ k \[LessEqual] yg[\([i]\)]\  && \ 
                hooktable[\([k, i]\)] \[NotEqual] \ 
                  0, \(k++\), \[IndentingNewLine]\ \(hook++\)]; \
\[IndentingNewLine]For[k = i + 1, 
              k \[LessEqual] dpt\  && \ 
                hooktable[\([j, k]\)] \[NotEqual] \ 
                  0, \(k++\), \[IndentingNewLine]\ \(hook++\)]; \
\[IndentingNewLine]polden\  *= \ \((1 - 
                  q^hook)\)]]; \[IndentingNewLine]Return[{polnum, 
            polden}]\[IndentingNewLine]]\), "\[IndentingNewLine]", 
    \(SLInvarint[bword_] := 
      Block[{i, bbwd, c, st, wythe, ex, t, q, yg, sln, weight, tr, index, \ 
          link}, \[IndentingNewLine]bbwd\  = \ 
          bwdtonumwd[bword]; \[IndentingNewLine]c\  = \ 
          Length[bbwd]; \[IndentingNewLine]If[c > 100, 
          Print["\<B-word is too long.\>"]; Break[]]; \[IndentingNewLine]st = 
          Abs[bbwd[\([1]\)]]; \[IndentingNewLine]For[i = 2, 
          i <= c, \(i++\), \[IndentingNewLine]If[Abs[bbwd[\([i]\)]] >= st, \ 
            st = Abs[bbwd[\([i]\)]]]]; \[IndentingNewLine]bbwd = 
          Prepend[bbwd, st + 1]; \[IndentingNewLine]link = 
          Install["\<./ParallelLink2\>", \ 
            LinkMode -> Launch]; \[IndentingNewLine]ex\  = 
          MurakamiInv[First[bbwd], bbwd]; \[IndentingNewLine]ex\  = \ 
          ToExpression[ex]; \[IndentingNewLine]Uninstall[
          link]; \[IndentingNewLine]If[ex \[Equal] {}, 
          Return["\<Fail to compute.\>"]]; \[IndentingNewLine]index = 
          3*First[bbwd]; \[IndentingNewLine]sln\  = \ 
          0; \[IndentingNewLine]wythe = First[ex]; \[IndentingNewLine]ex = 
          Rest[ex]; \[IndentingNewLine]While[
          True, \[IndentingNewLine]If[ex \[Equal] {}, 
            Break[]]; \[IndentingNewLine]yg = 
            First[ex]; \[IndentingNewLine]ex = 
            Rest[ex]; \[IndentingNewLine]tr = \((First[ex]\  /. \ 
                x \[Rule] 
                  Sqrt[q])\); \[IndentingNewLine]\[IndentingNewLine]weight = 
            ComputeWeight[yg, index]; \[IndentingNewLine]tr = 
            Factor[tr]; \[IndentingNewLine]sln\  += 
            Factor[\ weight[\([1]\)]\ *\ 
                Numerator[
                    tr]/\((Denominator[tr]*
                      weight[\([2]\)])\)]; \[IndentingNewLine]\
\[IndentingNewLine]ex = 
            Rest[ex];\[IndentingNewLine]]; \
\[IndentingNewLine]Print["\<3-parallel sl_n invariant for \>", \ "\<[\>", \ 
          bword, \ "\<]\>"]; \[IndentingNewLine]ex = 
          Sqrt[\[Lambda]]^
            wythe; \[IndentingNewLine]ex\  *= \ \((\((1 - \[Lambda]\ \
q)\)/\((Sqrt[\[Lambda]] \((q - 1)\))\))\)^\((First[bbwd] - 
                1)\); \[IndentingNewLine]Return[
          Factor[ex*sln]];\[IndentingNewLine]]\)}], "Input",
  InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[{
    RowBox[{\(TotalDataListFromDataFile[fname_] := 
        Block[{sn, ex, str, totaldata = {}}, \[IndentingNewLine]sn = 
            OpenRead[fname]; \[IndentingNewLine]If[sn == $Failed, 
            Print["\<Can't open \>", fname, "\<.\>"]; 
            Return[]]; \[IndentingNewLine]While[
            True, \[IndentingNewLine]ex = 
              Read[sn, String]; \[IndentingNewLine]If[ex \[Equal] EndOfFile, 
              Break[]]; \[IndentingNewLine]If[
              StringLength[ex] \[NotEqual] 0\  && \ 
                StringLength[ex] < 10, \[IndentingNewLine]str = 
                StringToStream[ex]; \[IndentingNewLine]ex = 
                ReadList[str, Number]; \[IndentingNewLine]totaldata = 
                Append[totaldata, ex]; \[IndentingNewLine]Close[
                str];\[IndentingNewLine]];\[IndentingNewLine]]; \
\[IndentingNewLine]Close[sn]; \[IndentingNewLine]Return[
            Flatten[totaldata]]\[IndentingNewLine]]\), 
      "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
    RowBox[{\(NextPt[n_, com_, comppos_] := 
        Block[{i}, \[IndentingNewLine]For[i = 2, 
            i <= com, \(i++\), \[IndentingNewLine]If[
              n < comppos[\([i, 1]\)] - 1, 
              Return[n + 1]]; \[IndentingNewLine]If[
              n \[Equal] comppos[\([i, 1]\)] - 1, 
              Return[comppos[\([i - 1, 
                    1]\)]]];\[IndentingNewLine]]\[IndentingNewLine]]\), 
      "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
    RowBox[{
      StyleBox[\(CrossingPoint[p1_, p2_, p3_, p4_] := 
          Block[{mm, 
              v}, \n\ \ \ \ mm = {{p2[\([2]\)] - p1[\([2]\)], 
                  p1[\([1]\)] - 
                    p2[\([1]\)]}, {\n\ \ \ \ \ \ \ \ \ \ p4[\([2]\)] - 
                    p3[\([2]\)], 
                  p3[\([1]\)] - p4[\([1]\)]}}; \n\ \ \ \ v = {p1[\([1]\)]*
                    p2[\([2]\)] - p2[\([1]\)]*p1[\([2]\)], 
                p3[\([1]\)]*p4[\([2]\)] - 
                  p4[\([1]\)]*p3[\([2]\)]}; \n\ \ \ \ Return[
              Round[N[LinearSolve[mm, v], 20]]]\n\ \ \ \ ]\),
        FormatType->StandardForm], "\[IndentingNewLine]"}], "\n", 
    RowBox[{
      StyleBox[\(Distance[p1_, p2_] := 
            Round[N[Sqrt[\((p1[\([1]\)] - p2[\([1]\)])\)^2 + \((p1[\([2]\)] - 
                          p2[\([2]\)])\)^2]]];\),
        FormatType->StandardForm], 
      "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
    RowBox[{
      RowBox[{
        StyleBox[\(FindDistance[xy_, cplist_, cpinfo_]\),
          FormatType->StandardForm], 
        StyleBox[":=",
          FormatType->StandardForm], 
        RowBox[{
          StyleBox["Block",
            FormatType->StandardForm], 
          StyleBox["[",
            FormatType->StandardForm], 
          RowBox[{
            StyleBox[\({i, j, d, len, cp, cp1, dl = {}, tmp, mind}\),
              FormatType->StandardForm], 
            StyleBox[",",
              FormatType->StandardForm], 
            StyleBox["\n",
              FormatType->StandardForm], 
            StyleBox["    ",
              FormatType->StandardForm], 
            RowBox[{
              StyleBox[\(cp = cplist\),
                FormatType->StandardForm], 
              StyleBox[";",
                FormatType->StandardForm], 
              StyleBox[\(cp1 = cpinfo\),
                FormatType->StandardForm], 
              StyleBox[";",
                FormatType->StandardForm], 
              StyleBox["\n",
                FormatType->StandardForm], 
              StyleBox["    ",
                FormatType->StandardForm], 
              StyleBox[\(len = Length[cp]\),
                FormatType->StandardForm], 
              StyleBox[";",
                FormatType->StandardForm], 
              StyleBox["\n",
                FormatType->StandardForm], 
              StyleBox["    ",
                FormatType->StandardForm], 
              RowBox[{
                StyleBox["For",
                  FormatType->StandardForm], 
                StyleBox["[",
                  FormatType->StandardForm], 
                RowBox[{
                  StyleBox[\(i = 1\),
                    FormatType->StandardForm], 
                  StyleBox[",",
                    FormatType->StandardForm], 
                  RowBox[{
                    StyleBox["i",
                      FormatType->StandardForm], 
                    StyleBox["\[LessEqual]",
                      FormatType->StandardForm,
                      FontFamily->"Mathematica1Mono"], 
                    StyleBox["len",
                      FormatType->StandardForm]}], 
                  StyleBox[",",
                    FormatType->StandardForm], 
                  StyleBox[\(i++\),
                    FormatType->StandardForm], 
                  StyleBox[",",
                    FormatType->StandardForm], 
                  StyleBox["\n",
                    FormatType->StandardForm], 
                  StyleBox["      ",
                    FormatType->StandardForm], 
                  
                  StyleBox[\(\(d = 
                        Distance[xy[\([Abs[cp[\([i, 1]\)]]]\)], 
                          cp[\([i, 2]\)]];\)\n
                    \ \ \ \ \ \ dl = Append[dl, {Abs[cp[\([i, 1]\)]], d}]\),
                    FormatType->StandardForm]}], 
                StyleBox["\n",
                  FormatType->StandardForm], 
                StyleBox["      ",
                  FormatType->StandardForm], 
                StyleBox["]",
                  FormatType->StandardForm]}], 
              StyleBox[";",
                FormatType->StandardForm], 
              StyleBox["\n",
                FormatType->StandardForm], 
              StyleBox["    ",
                FormatType->StandardForm], 
              RowBox[{
                StyleBox["For",
                  FormatType->StandardForm], 
                StyleBox["[",
                  FormatType->StandardForm], 
                RowBox[{
                  StyleBox[\(i = 1\),
                    FormatType->StandardForm], 
                  StyleBox[",",
                    FormatType->StandardForm], 
                  StyleBox[\(i < len\),
                    FormatType->StandardForm], 
                  StyleBox[",",
                    FormatType->StandardForm], 
                  StyleBox[\(i++\),
                    FormatType->StandardForm], 
                  StyleBox[",",
                    FormatType->StandardForm], 
                  StyleBox["\n",
                    FormatType->StandardForm], 
                  StyleBox["      ",
                    FormatType->StandardForm], 
                  RowBox[{
                    StyleBox[\(mind = dl[\([i, 2]\)]\),
                      FormatType->StandardForm], 
                    StyleBox[";",
                      FormatType->StandardForm], 
                    StyleBox["\n",
                      FormatType->StandardForm], 
                    StyleBox["      ",
                      FormatType->StandardForm], 
                    RowBox[{
                      StyleBox["For",
                        FormatType->StandardForm], 
                      StyleBox["[",
                        FormatType->StandardForm], 
                      RowBox[{
                        StyleBox[\(j = i + 1\),
                          FormatType->StandardForm], 
                        StyleBox[",",
                          FormatType->StandardForm], 
                        RowBox[{
                          StyleBox["j",
                            FormatType->StandardForm], 
                          StyleBox["\[LessEqual]",
                            FormatType->StandardForm,
                            FontFamily->"Mathematica1Mono"], 
                          StyleBox["len",
                            FormatType->StandardForm]}], 
                        StyleBox[",",
                          FormatType->StandardForm], 
                        StyleBox[\(j++\),
                          FormatType->StandardForm], 
                        StyleBox[",",
                          FormatType->StandardForm], 
                        StyleBox["\n",
                          FormatType->StandardForm], 
                        StyleBox["        ",
                          FormatType->StandardForm], 
                        RowBox[{
                          RowBox[{
                            StyleBox["If",
                              FormatType->StandardForm], 
                            StyleBox["[",
                              FormatType->StandardForm], 
                            RowBox[{
                              RowBox[{
                                RowBox[{
                                  StyleBox[\(dl[\([i, 1]\)]\),
                                    FormatType->StandardForm], 
                                  StyleBox["\[Equal]",
                                    FormatType->StandardForm,
                                    FontFamily->"Mathematica1Mono"], 
                                  StyleBox[\(dl[\([j, 1]\)]\),
                                    FormatType->StandardForm]}], 
                                StyleBox[" ",
                                  FormatType->StandardForm], 
                                StyleBox["&&",
                                  FormatType->StandardForm], 
                                StyleBox["  ",
                                  FormatType->StandardForm], 
                                StyleBox[\(dl[\([j, 2]\)] < mind\),
                                  FormatType->StandardForm]}], 
                              StyleBox[" ",
                                FormatType->StandardForm], 
                              StyleBox[",",
                                FormatType->StandardForm], 
                              StyleBox["\n",
                                FormatType->StandardForm], 
                              StyleBox["          ",
                                FormatType->StandardForm], 
                              
                              StyleBox[\(tmp = cp[\([j]\)]; \ 
                                cp[\([j]\)] = cp[\([i]\)];\n
                                \ \ \ \ \ \ \ \ \ \ cp[\([i]\)] = tmp; \ 
                                mind = dl[\([j, 2]\)]; tmp = dl[\([j, 2]\)]; 
                                dl[\([j, 2]\)] = dl[\([i, 2]\)]; 
                                dl[\([i, 2]\)] = tmp;\[IndentingNewLine]
                                tmp = cp1[\([j]\)]; 
                                cp1[\([j]\)] = cp1[\([i]\)]; 
                                cp1[\([i]\)] = tmp\),
                                FormatType->StandardForm]}], 
                            StyleBox["\n",
                              FormatType->StandardForm], 
                            StyleBox["          ",
                              FormatType->StandardForm], 
                            StyleBox["]",
                              FormatType->StandardForm]}], 
                          StyleBox[";",
                            FormatType->StandardForm], 
                          StyleBox["\n",
                            FormatType->StandardForm], 
                          StyleBox["        ",
                            FormatType->StandardForm], 
                          
                          StyleBox[\(If[dl[\([i, 1]\)] != dl[\([j, 1]\)], 
                              Break[]]\),
                            FormatType->StandardForm]}]}], 
                      StyleBox["\n",
                        FormatType->StandardForm], 
                      StyleBox["        ",
                        FormatType->StandardForm], 
                      StyleBox["]",
                        FormatType->StandardForm]}]}]}], 
                StyleBox["\n",
                  FormatType->StandardForm], 
                StyleBox["      ",
                  FormatType->StandardForm], 
                StyleBox["]",
                  FormatType->StandardForm]}], 
              StyleBox[";",
                FormatType->StandardForm], 
              StyleBox["\n",
                FormatType->StandardForm], 
              StyleBox["      ",
                FormatType->StandardForm], 
              StyleBox[\(Return[{cp, cp1}]\),
                FormatType->StandardForm]}]}], 
          StyleBox["\n",
            FormatType->StandardForm], 
          StyleBox["    ",
            FormatType->StandardForm], 
          StyleBox["]",
            FormatType->StandardForm]}]}], "\[IndentingNewLine]"}], "\n", 
    RowBox[{\(CrossSign[p1_, p2_, p4_] := 
        Block[{s}, \[IndentingNewLine]s = 
            p1[\([1]\)]*\((p4[\([2]\)] - p2[\([2]\)])\) + 
              p4[\([1]\)]*\((p2[\([2]\)] - p1[\([2]\)])\) + 
              p2[\([1]\)]*\((p1[\([2]\)] - 
                    p4[\([2]\)])\); \[IndentingNewLine]If[s > 0, \ 
            Return[True], Return[False]]\[IndentingNewLine]]\), 
      "\[IndentingNewLine]"}], "\n", 
    RowBox[{
      StyleBox[\(PLDataFromSnapPeaData[fname_]\),
        FormatType->StandardForm], 
      StyleBox[":=",
        FormatType->StandardForm], 
      RowBox[{
        StyleBox["Block",
          FormatType->StandardForm], 
        StyleBox["[",
          FormatType->StandardForm], 
        RowBox[{
          
          StyleBox[\({i, j, k, k0, m, n, len, ex, ex1, tmp, spd = {}, com, 
              comppos, xy, edge, crossing, under, overcr, toppt, tail, p1, 
              p2, p3, p4, cp, cplist = {}, cpsign = {}, cpinfo = {}, 
              nump = {}, pdata = {}, pdataa = {}, pdatab = {}, fileid}\),
            FormatType->StandardForm], 
          StyleBox[",",
            FormatType->StandardForm], 
          StyleBox["\n",
            FormatType->StandardForm], 
          StyleBox["    ",
            FormatType->StandardForm], 
          RowBox[{
            StyleBox[\(ex = TotalDataListFromDataFile[fname]\),
              FormatType->StandardForm], 
            StyleBox[";",
              FormatType->StandardForm], 
            StyleBox["\n",
              FormatType->StandardForm], 
            StyleBox["    ",
              FormatType->StandardForm], 
            RowBox[{
              StyleBox["For",
                FormatType->StandardForm], 
              StyleBox["[",
                FormatType->StandardForm], 
              RowBox[{
                StyleBox[\(j = 1\),
                  FormatType->StandardForm], 
                StyleBox[",",
                  FormatType->StandardForm], 
                RowBox[{
                  StyleBox["j",
                    FormatType->StandardForm], 
                  StyleBox["\[LessEqual]",
                    FormatType->StandardForm,
                    FontFamily->"Mathematica1Mono"], 
                  StyleBox["4",
                    FormatType->StandardForm]}], 
                StyleBox[",",
                  FormatType->StandardForm], 
                StyleBox[\(j++\),
                  FormatType->StandardForm], 
                StyleBox[",",
                  FormatType->StandardForm], 
                StyleBox["\n",
                  FormatType->StandardForm], 
                StyleBox["      ",
                  FormatType->StandardForm], 
                RowBox[{
                  RowBox[{
                    StyleBox[\(tmp = {};\),
                      FormatType->StandardForm], 
                    StyleBox["\n",
                      FormatType->StandardForm], 
                    StyleBox["      ",
                      FormatType->StandardForm], 
                    StyleBox[\(n = First[ex]; \ ex = Delete[ex, 1];\),
                      FormatType->StandardForm], 
                    StyleBox["\n",
                      FormatType->StandardForm], 
                    StyleBox["      ",
                      FormatType->StandardForm], 
                    RowBox[{
                      StyleBox["For",
                        FormatType->StandardForm], 
                      StyleBox["[",
                        FormatType->StandardForm], 
                      RowBox[{
                        StyleBox[\(i = 1\),
                          FormatType->StandardForm], 
                        StyleBox[",",
                          FormatType->StandardForm], 
                        RowBox[{
                          StyleBox["i",
                            FormatType->StandardForm], 
                          StyleBox["\[LessEqual]",
                            FormatType->StandardForm,
                            FontFamily->"Mathematica1Mono"], 
                          StyleBox["n",
                            FormatType->StandardForm]}], 
                        StyleBox[",",
                          FormatType->StandardForm], 
                        StyleBox[\(i++\),
                          FormatType->StandardForm], 
                        StyleBox[",",
                          FormatType->StandardForm], 
                        StyleBox["\n",
                          FormatType->StandardForm], 
                        StyleBox["        ",
                          FormatType->StandardForm], 
                        StyleBox[\(\(tmp = Append[tmp, Take[ex, {1, 2}]];\)\n
                          \ \ \ \ \ \ \ \ ex = Drop[ex, 2]\),
                          FormatType->StandardForm]}], 
                      StyleBox["\n",
                        FormatType->StandardForm], 
                      StyleBox["        ",
                        FormatType->StandardForm], 
                      StyleBox["]",
                        FormatType->StandardForm]}]}], 
                  StyleBox[";",
                    FormatType->StandardForm], 
                  StyleBox["\n",
                    FormatType->StandardForm], 
                  StyleBox["      ",
                    FormatType->StandardForm], 
                  StyleBox[\(spd = Append[spd, tmp]\),
                    FormatType->StandardForm], 
                  StyleBox[";",
                    FormatType->StandardForm]}]}], 
              StyleBox["\n",
                FormatType->StandardForm], 
              StyleBox["      ",
                FormatType->StandardForm], 
              StyleBox["]",
                FormatType->StandardForm]}], 
            StyleBox[";",
              FormatType->StandardForm], 
            StyleBox["\n",
              FormatType->StandardForm], 
            StyleBox["    ",
              FormatType->StandardForm], 
            StyleBox[\(n = First[ex]\),
              FormatType->StandardForm], 
            StyleBox[";",
              FormatType->StandardForm], 
            StyleBox[" ",
              FormatType->StandardForm], 
            StyleBox[\(ex = Delete[ex, 1]\),
              FormatType->StandardForm], 
            StyleBox[";",
              FormatType->StandardForm], 
            StyleBox["\n",
              FormatType->StandardForm], 
            StyleBox["    ",
              FormatType->StandardForm], 
            
            StyleBox[\(If[n != \(-1\), 
                Print["\<Can't find the separator (-1) of SnapPea. Please \
change \>", n, "\< to -1 and retry.\>"]; Close[fileid]; Return[False]]\),
              FormatType->StandardForm], 
            StyleBox[";",
              FormatType->StandardForm], 
            StyleBox["\n",
              FormatType->StandardForm], 
            StyleBox["    ",
              FormatType->StandardForm], 
            RowBox[{
              StyleBox["fileid",
                FormatType->StandardForm], 
              StyleBox["=",
                FormatType->StandardForm], 
              RowBox[{
                StyleBox["OpenWrite",
                  FormatType->StandardForm], 
                StyleBox["[",
                  FormatType->StandardForm], 
                RowBox[{
                  StyleBox["\"\<PLFromSnappea.sp\>\"",
                    FormatType->StandardForm], 
                  StyleBox[",",
                    FormatType->StandardForm], 
                  RowBox[{
                    StyleBox["FormatType",
                      FormatType->StandardForm], 
                    StyleBox["\[Rule]",
                      FormatType->StandardForm,
                      FontFamily->"Mathematica1Mono"], 
                    StyleBox["OutputForm",
                      FormatType->StandardForm]}]}], 
                StyleBox["]",
                  FormatType->StandardForm]}]}], 
            StyleBox[";",
              FormatType->StandardForm], 
            StyleBox["\n",
              FormatType->StandardForm], 
            StyleBox["    ",
              FormatType->StandardForm], 
            StyleBox[\(comppos = spd[\([1]\)]\),
              FormatType->StandardForm], 
            StyleBox[";",
              FormatType->StandardForm], 
            StyleBox[\( (*\ \(Print[\ spd];\)\ *) \),
              FormatType->StandardForm], 
            StyleBox["\n",
              FormatType->StandardForm], 
            StyleBox["    ",
              FormatType->StandardForm], 
            StyleBox[\(Write[fileid, Length[comppos]]\),
              FormatType->StandardForm], 
            StyleBox[";",
              FormatType->StandardForm], 
            StyleBox["\n",
              FormatType->StandardForm], 
            StyleBox["    ",
              FormatType->StandardForm], 
            StyleBox[\(xy = spd[\([2]\)]\),
              FormatType->StandardForm], 
            StyleBox[";",
              FormatType->StandardForm], 
            StyleBox["\n",
              FormatType->StandardForm], 
            StyleBox["    ",
              FormatType->StandardForm], 
            StyleBox[\(comppos = Append[comppos, {Length[xy], Length[xy]}]\),
              FormatType->StandardForm], 
            StyleBox[";",
              FormatType->StandardForm], 
            StyleBox["\n",
              FormatType->StandardForm], 
            StyleBox["    ",
              FormatType->StandardForm], 
            StyleBox[\(edge = spd[\([3]\)]\),
              FormatType->StandardForm], 
            StyleBox[";",
              FormatType->StandardForm], 
            StyleBox["\n",
              FormatType->StandardForm], 
            StyleBox["    ",
              FormatType->StandardForm], 
            StyleBox[\(crossing = spd[\([4]\)]\),
              FormatType->StandardForm], 
            StyleBox[";",
              FormatType->StandardForm], 
            StyleBox["\n",
              FormatType->StandardForm], 
            StyleBox["    ",
              FormatType->StandardForm], 
            StyleBox[\(com = Length[comppos]\),
              FormatType->StandardForm], 
            StyleBox[";",
              FormatType->StandardForm], 
            StyleBox["\n",
              FormatType->StandardForm], 
            StyleBox["    ",
              FormatType->StandardForm], 
            StyleBox[\(len = Length[crossing]\),
              FormatType->StandardForm], 
            StyleBox[";",
              FormatType->StandardForm], 
            StyleBox["\n",
              FormatType->StandardForm], 
            StyleBox["    ",
              FormatType->StandardForm], 
            StyleBox[\(k = \(k0 = 0\)\),
              FormatType->StandardForm], 
            StyleBox[";",
              FormatType->StandardForm], 
            StyleBox["\n",
              FormatType->StandardForm], 
            StyleBox["    ",
              FormatType->StandardForm], 
            RowBox[{
              StyleBox["For",
                FormatType->StandardForm], 
              StyleBox["[",
                FormatType->StandardForm], 
              RowBox[{
                StyleBox[\(i = 1\),
                  FormatType->StandardForm], 
                StyleBox[",",
                  FormatType->StandardForm], 
                StyleBox[\(i < com\),
                  FormatType->StandardForm], 
                StyleBox[",",
                  FormatType->StandardForm], 
                StyleBox[\(i++\),
                  FormatType->StandardForm], 
                StyleBox[",",
                  FormatType->StandardForm], 
                StyleBox["\n",
                  FormatType->StandardForm], 
                StyleBox["      ",
                  FormatType->StandardForm], 
                RowBox[{
                  StyleBox[\(m = comppos[\([i, 1]\)]\),
                    FormatType->StandardForm], 
                  StyleBox[";",
                    FormatType->StandardForm], 
                  StyleBox[" ",
                    FormatType->StandardForm], 
                  StyleBox[\(n = comppos[\([i + 1, 1]\)]\),
                    FormatType->StandardForm], 
                  StyleBox[";",
                    FormatType->StandardForm], 
                  StyleBox["\n",
                    FormatType->StandardForm], 
                  StyleBox["      ",
                    FormatType->StandardForm], 
                  RowBox[{
                    StyleBox["For",
                      FormatType->StandardForm], 
                    StyleBox["[",
                      FormatType->StandardForm], 
                    RowBox[{
                      StyleBox[\(j = 1\),
                        FormatType->StandardForm], 
                      StyleBox[",",
                        FormatType->StandardForm], 
                      RowBox[{
                        StyleBox["j",
                          FormatType->StandardForm], 
                        StyleBox["\[LessEqual]",
                          FormatType->StandardForm,
                          FontFamily->"Mathematica1Mono"], 
                        StyleBox["len",
                          FormatType->StandardForm]}], 
                      StyleBox[",",
                        FormatType->StandardForm], 
                      StyleBox[\(j++\),
                        FormatType->StandardForm], 
                      StyleBox[",",
                        FormatType->StandardForm], 
                      StyleBox["\n",
                        FormatType->StandardForm], 
                      StyleBox["        ",
                        FormatType->StandardForm], 
                      RowBox[{
                        RowBox[{
                          StyleBox[\(under = crossing[\([j, 1]\)];\),
                            FormatType->StandardForm], 
                          StyleBox["\n",
                            FormatType->StandardForm], 
                          StyleBox["        ",
                            FormatType->StandardForm], 
                          StyleBox[\(overcr = crossing[\([j, 2]\)];\),
                            FormatType->StandardForm], 
                          StyleBox["\n",
                            FormatType->StandardForm], 
                          StyleBox["        ",
                            FormatType->StandardForm], 
                          RowBox[{
                            StyleBox["If",
                              FormatType->StandardForm], 
                            StyleBox["[",
                              FormatType->StandardForm], 
                            RowBox[{
                              RowBox[{
                                RowBox[{
                                  StyleBox["m",
                                    FormatType->StandardForm], 
                                  StyleBox["\[LessEqual]",
                                    FormatType->StandardForm,
                                    FontFamily->"Mathematica1Mono"], 
                                  StyleBox["under",
                                    FormatType->StandardForm]}], 
                                StyleBox[" ",
                                  FormatType->StandardForm], 
                                StyleBox["&&",
                                  FormatType->StandardForm], 
                                StyleBox[" ",
                                  FormatType->StandardForm], 
                                StyleBox[\(under < n\),
                                  FormatType->StandardForm]}], 
                              StyleBox[",",
                                FormatType->StandardForm], 
                              StyleBox[\(k++\),
                                FormatType->StandardForm]}], 
                            StyleBox["]",
                              FormatType->StandardForm]}]}], 
                        StyleBox[";",
                          FormatType->StandardForm], 
                        StyleBox["\n",
                          FormatType->StandardForm], 
                        StyleBox["        ",
                          FormatType->StandardForm], 
                        RowBox[{
                          StyleBox["If",
                            FormatType->StandardForm], 
                          StyleBox["[",
                            FormatType->StandardForm], 
                          RowBox[{
                            RowBox[{
                              RowBox[{
                                StyleBox["m",
                                  FormatType->StandardForm], 
                                StyleBox["\[LessEqual]",
                                  FormatType->StandardForm,
                                  FontFamily->"Mathematica1Mono"], 
                                StyleBox["overcr",
                                  FormatType->StandardForm]}], 
                              StyleBox[" ",
                                FormatType->StandardForm], 
                              StyleBox["&&",
                                FormatType->StandardForm], 
                              StyleBox[" ",
                                FormatType->StandardForm], 
                              StyleBox[\(overcr < n\),
                                FormatType->StandardForm]}], 
                            StyleBox[",",
                              FormatType->StandardForm], 
                            StyleBox[" ",
                              FormatType->StandardForm], 
                            StyleBox[\(k++\),
                              FormatType->StandardForm]}], 
                          StyleBox["]",
                            FormatType->StandardForm]}]}]}], 
                    StyleBox["\n",
                      FormatType->StandardForm], 
                    StyleBox["        ",
                      FormatType->StandardForm], 
                    StyleBox["]",
                      FormatType->StandardForm]}], 
                  StyleBox[";",
                    FormatType->StandardForm], 
                  StyleBox["\[IndentingNewLine]",
                    FormatType->StandardForm], 
                  StyleBox[\(nump = Append[nump, \((k - k0)\)/2]\),
                    FormatType->StandardForm], 
                  StyleBox[";",
                    FormatType->StandardForm], 
                  StyleBox["\[IndentingNewLine]",
                    FormatType->StandardForm], 
                  StyleBox[\(k0 = k\),
                    FormatType->StandardForm], 
                  StyleBox[";",
                    FormatType->StandardForm], 
                  StyleBox["\n",
                    FormatType->StandardForm], 
                  StyleBox["      ",
                    FormatType->StandardForm], 
                  StyleBox[\(Write[fileid, k]\),
                    FormatType->StandardForm]}]}], 
              StyleBox["\n",
                FormatType->StandardForm], 
              StyleBox["      ",
                FormatType->StandardForm], 
              StyleBox["]",
                FormatType->StandardForm]}], 
            StyleBox[";",
              FormatType->StandardForm], 
            StyleBox["\n",
              FormatType->StandardForm], 
            StyleBox["    ",
              FormatType->StandardForm], 
            RowBox[{
              StyleBox["For",
                FormatType->StandardForm], 
              StyleBox["[",
                FormatType->StandardForm], 
              RowBox[{
                StyleBox[\(i = 1\),
                  FormatType->StandardForm], 
                StyleBox[",",
                  FormatType->StandardForm], 
                RowBox[{
                  StyleBox["i",
                    FormatType->StandardForm], 
                  StyleBox["\[LessEqual]",
                    FormatType->StandardForm,
                    FontFamily->"Mathematica1Mono"], 
                  StyleBox[\(Length[edge]\),
                    FormatType->StandardForm]}], 
                StyleBox[",",
                  FormatType->StandardForm], 
                StyleBox[\(i++\),
                  FormatType->StandardForm], 
                StyleBox[",",
                  FormatType->StandardForm], 
                StyleBox["\n",
                  FormatType->StandardForm], 
                StyleBox[
                  RowBox[{
                    StyleBox["         ",
                      FormatType->StandardForm], "  "}]], 
                RowBox[{
                  StyleBox[\(m = edge[\([i, 1]\)]\),
                    FormatType->StandardForm], 
                  StyleBox[";",
                    FormatType->StandardForm], 
                  StyleBox[" ",
                    FormatType->StandardForm], 
                  StyleBox[\(n = edge[\([i, 2]\)]\),
                    FormatType->StandardForm], 
                  StyleBox[";",
                    FormatType->StandardForm], 
                  StyleBox["\n",
                    FormatType->StandardForm], 
                  StyleBox["           ",
                    FormatType->StandardForm], 
                  RowBox[{
                    StyleBox["For",
                      FormatType->StandardForm], 
                    StyleBox["[",
                      FormatType->StandardForm], 
                    RowBox[{
                      StyleBox[\(j = 1\),
                        FormatType->StandardForm], 
                      StyleBox[",",
                        FormatType->StandardForm], 
                      RowBox[{
                        StyleBox["j",
                          FormatType->StandardForm], 
                        StyleBox["\[LessEqual]",
                          FormatType->StandardForm,
                          FontFamily->"Mathematica1Mono"], 
                        StyleBox["len",
                          FormatType->StandardForm]}], 
                      StyleBox[",",
                        FormatType->StandardForm], 
                      StyleBox[\(j++\),
                        FormatType->StandardForm], 
                      StyleBox[",",
                        FormatType->StandardForm], 
                      StyleBox["\n",
                        FormatType->StandardForm], 
                      StyleBox["              ",
                        FormatType->StandardForm], 
                      RowBox[{
                        RowBox[{
                          StyleBox["If",
                            FormatType->StandardForm], 
                          StyleBox["[",
                            FormatType->StandardForm], 
                          RowBox[{
                            RowBox[{
                              StyleBox[\(crossing[\([j, 1]\)]\),
                                FormatType->StandardForm], 
                              StyleBox["\[Equal]",
                                FormatType->StandardForm,
                                FontFamily->"Mathematica1Mono"], 
                              StyleBox["m",
                                FormatType->StandardForm]}], 
                            StyleBox[",",
                              FormatType->StandardForm], 
                            
                            StyleBox[\(\(cpinfo = 
                                  Append[
                                    cpinfo, {{m, n}, {crossing[\([j, 1]\)], 
                                        crossing[\([j, 
                                        2]\)]}}];\)\[IndentingNewLine] (*\ \
{m, n} : \ edge, \ {crossing[\([j, 1]\)], crossing[\([j, 2]\)]} : \ 
                                  corssing, \[IndentingNewLine]if\ m == 
                                  crossing[\([j, 1]\)], \ 
                                then\ over\ crossing\ *) \[IndentingNewLine]
                              \ \ \ \ \ \ \(If[m == crossing[\([j, 1]\)], 
                                  cpsign = Append[cpsign, 1], 
                                  cpsign = Append[cpsign, 0]];\)\n
                              \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ p1 = 
                                xy[\([m + 1]\)]; \ p2 = xy[\([n + 1]\)];\n
                              \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \(p3 = 
                                  xy[\([crossing[\([j, 2]\)] + 1]\)];\)\n
                              \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \(p4 = 
                                  xy[\([NextPt[crossing[\([j, 2]\)], com, 
                                        comppos] + 1]\)];\)\n
                              \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ cp = 
                                CrossingPoint[p1, p2, p3, p4]; 
                              cp = Round[cp];\[IndentingNewLine]
                              \ \ \ \ \ \ If[Length[cp] != 0, \ 
                                cplist = Append[cplist, {\(-i\), cp}], 
                                Close[fileid]; 
                                Return["\<fail to convert.\>"]]\),
                              FormatType->StandardForm]}], 
                          StyleBox["\n",
                            FormatType->StandardForm], 
                          StyleBox["            ",
                            FormatType->StandardForm], 
                          StyleBox["]",
                            FormatType->StandardForm]}], 
                        StyleBox[";",
                          FormatType->StandardForm], 
                        StyleBox["\n",
                          FormatType->StandardForm], 
                        StyleBox["            ",
                          FormatType->StandardForm], 
                        RowBox[{
                          StyleBox["If",
                            FormatType->StandardForm], 
                          StyleBox["[",
                            FormatType->StandardForm], 
                          RowBox[{
                            RowBox[{
                              StyleBox[\(crossing[\([j, 2]\)]\),
                                FormatType->StandardForm], 
                              StyleBox["\[Equal]",
                                FormatType->StandardForm,
                                FontFamily->"Mathematica1Mono"], 
                              StyleBox["m",
                                FormatType->StandardForm]}], 
                            StyleBox[",",
                              FormatType->StandardForm], 
                            RowBox[{
                              RowBox[{
                                StyleBox["cpinfo",
                                  FormatType->StandardForm], 
                                StyleBox["=",
                                  FormatType->StandardForm], 
                                RowBox[{
                                  StyleBox["Append",
                                    FormatType->StandardForm], 
                                  "[", \(cpinfo, {{m, 
                                      n}, {crossing[\([j, 1]\)], 
                                      crossing[\([j, 2]\)]}}\), "]"}]}], ";", 
                              "\[IndentingNewLine]", 
                              "    ", \(If[m == crossing[\([j, 1]\)], 
                                cpsign = Append[cpsign, 1], 
                                cpsign = Append[cpsign, 0]]\), ";", 
                              StyleBox["\n",
                                FormatType->StandardForm], 
                              StyleBox["               ",
                                FormatType->StandardForm], 
                              StyleBox[\(p1 = xy[\([m + 1]\)]\),
                                FormatType->StandardForm], 
                              StyleBox[";",
                                FormatType->StandardForm], 
                              StyleBox["\n",
                                FormatType->StandardForm], 
                              StyleBox["               ",
                                FormatType->StandardForm], 
                              StyleBox[\(p2 = xy[\([n + 1]\)]\),
                                FormatType->StandardForm], 
                              StyleBox[";",
                                FormatType->StandardForm], 
                              StyleBox["\n",
                                FormatType->StandardForm], 
                              StyleBox["               ",
                                FormatType->StandardForm], 
                              
                              StyleBox[\(p3 = 
                                  xy[\([crossing[\([j, 1]\)] + 1]\)]\),
                                FormatType->StandardForm], 
                              StyleBox[";",
                                FormatType->StandardForm], 
                              StyleBox["\n",
                                FormatType->StandardForm], 
                              StyleBox["               ",
                                FormatType->StandardForm], 
                              
                              StyleBox[\(p4 = 
                                  xy[\([NextPt[crossing[\([j, 1]\)], com, 
                                        comppos] + 1]\)]\),
                                FormatType->StandardForm], 
                              StyleBox[";",
                                FormatType->StandardForm], 
                              StyleBox["\n",
                                FormatType->StandardForm], 
                              StyleBox["               ",
                                FormatType->StandardForm], 
                              
                              StyleBox[\(cp = CrossingPoint[p1, p2, p3, p4]\),
                                
                                FormatType->StandardForm], 
                              StyleBox[";",
                                FormatType->StandardForm], 
                              StyleBox[\(cp = Round[cp]\),
                                FormatType->StandardForm], 
                              StyleBox[";",
                                FormatType->StandardForm], 
                              StyleBox["\n",
                                FormatType->StandardForm], 
                              StyleBox["               ",
                                FormatType->StandardForm], 
                              
                              StyleBox[\(If[Length[cp] != 0, \ 
                                  cplist = Append[cplist, {i, cp}], 
                                  Close[fileid]; 
                                  Return["\<fail to convert.\>"]]\),
                                FormatType->StandardForm]}]}], 
                          StyleBox["\n",
                            FormatType->StandardForm], 
                          StyleBox["            ",
                            FormatType->StandardForm], 
                          StyleBox["]",
                            FormatType->StandardForm]}], 
                        StyleBox[";",
                          FormatType->StandardForm]}]}], 
                    StyleBox["\n",
                      FormatType->StandardForm], 
                    StyleBox["          ",
                      FormatType->StandardForm], 
                    StyleBox["]",
                      FormatType->StandardForm]}], 
                  StyleBox[";",
                    FormatType->StandardForm]}]}], 
              StyleBox["\n",
                FormatType->StandardForm], 
              StyleBox["      ",
                FormatType->StandardForm], 
              StyleBox["]",
                FormatType->StandardForm]}], 
            StyleBox[";",
              FormatType->StandardForm], 
            StyleBox["\n",
              FormatType->StandardForm], 
            StyleBox["       ",
              FormatType->StandardForm], 
            StyleBox[\(cp = FindDistance[xy, cplist, cpinfo]\),
              FormatType->StandardForm], 
            StyleBox[";",
              FormatType->StandardForm], 
            StyleBox["\[IndentingNewLine]",
              FormatType->StandardForm], 
            StyleBox["  ",
              FormatType->StandardForm], 
            StyleBox[\(cplist = cp[\([1]\)]\),
              FormatType->StandardForm], 
            StyleBox[";",
              FormatType->StandardForm], 
            StyleBox[\(cpinfo = cp[\([2]\)]\),
              FormatType->StandardForm], 
            StyleBox[";",
              FormatType->StandardForm], 
            StyleBox[\( (*\ Print[cplist]; Print[cpinfo];\ *) \),
              FormatType->StandardForm], 
            StyleBox["\n",
              FormatType->StandardForm], 
            StyleBox["       ",
              FormatType->StandardForm], 
            
            StyleBox[\(For[i = 1, 
                i < com, \(i++\), \n\ \ \ \ \ \ \ \ \ \ \ xy = 
                  Insert[xy, xy[\([comppos[\([i, 1]\)] + i]\)], 
                    comppos[\([i + 1, 1]\)] + i]\n\ \ \ \ \ \ ]\),
              FormatType->StandardForm], 
            StyleBox[";",
              FormatType->StandardForm], 
            StyleBox["\n",
              FormatType->StandardForm], 
            StyleBox["      ",
              FormatType->StandardForm], 
            StyleBox[\(Write[fileid, Length[xy]]\),
              FormatType->StandardForm], 
            StyleBox[";",
              FormatType->StandardForm], 
            StyleBox["\n",
              FormatType->StandardForm], 
            StyleBox["      ",
              FormatType->StandardForm], 
            RowBox[{
              StyleBox["For",
                FormatType->StandardForm], 
              StyleBox["[",
                FormatType->StandardForm], 
              RowBox[{
                StyleBox[\(i = 1\),
                  FormatType->StandardForm], 
                StyleBox[",",
                  FormatType->StandardForm], 
                RowBox[{
                  StyleBox["i",
                    FormatType->StandardForm], 
                  StyleBox["\[LessEqual]",
                    FormatType->StandardForm,
                    FontFamily->"Mathematica1Mono"], 
                  StyleBox[\(Length[xy]\),
                    FormatType->StandardForm]}], 
                StyleBox[",",
                  FormatType->StandardForm], 
                StyleBox[\(i++\),
                  FormatType->StandardForm], 
                StyleBox[",",
                  FormatType->StandardForm], 
                StyleBox["\n",
                  FormatType->StandardForm], 
                StyleBox["          ",
                  FormatType->StandardForm], 
                
                StyleBox[\(Write[fileid, xy[\([i, 1]\)], "\< \>", 
                    xy[\([i, 2]\)]]\),
                  FormatType->StandardForm]}], 
              StyleBox["\n",
                FormatType->StandardForm], 
              StyleBox["      ",
                FormatType->StandardForm], 
              StyleBox["]",
                FormatType->StandardForm]}], 
            StyleBox[";",
              FormatType->StandardForm], 
            StyleBox["\[IndentingNewLine]",
              FormatType->StandardForm], 
            RowBox[{
              StyleBox["For",
                FormatType->StandardForm], 
              StyleBox["[",
                FormatType->StandardForm], 
              RowBox[{
                StyleBox[\(i = 1\),
                  FormatType->StandardForm], 
                StyleBox[",",
                  FormatType->StandardForm], 
                RowBox[{
                  StyleBox["i",
                    FormatType->StandardForm], 
                  StyleBox["\[LessEqual]",
                    FormatType->StandardForm,
                    FontFamily->"Mathematica1Mono"], 
                  StyleBox[\(Length[crossing]\),
                    FormatType->StandardForm]}], 
                StyleBox[",",
                  FormatType->StandardForm], 
                StyleBox[\(i++\),
                  FormatType->StandardForm], 
                StyleBox[",",
                  FormatType->StandardForm], 
                StyleBox["\n",
                  FormatType->StandardForm], 
                StyleBox["          ",
                  FormatType->StandardForm], 
                
                StyleBox[\(Write[fileid, crossing[\([i, 2]\)], "\< \>", 
                    crossing[\([i, 1]\)]]\),
                  FormatType->StandardForm]}], 
              StyleBox["\n",
                FormatType->StandardForm], 
              StyleBox["      ",
                FormatType->StandardForm], 
              StyleBox["]",
                FormatType->StandardForm]}], 
            StyleBox[";",
              FormatType->StandardForm], 
            StyleBox["\n",
              FormatType->StandardForm], 
            
            StyleBox[\( (*\ 
                over\ or\ under\ information\ of\ crossing\ \(point : \ 
                      1\)\  = \(\(>\)\(\ \)\(under\)\), \ 
                0\  = \(\(>\)\(\ \)\(over\)\)\ *) \),
              FormatType->StandardForm], 
            StyleBox["\[IndentingNewLine]",
              FormatType->StandardForm], 
            StyleBox["      ",
              FormatType->StandardForm], 
            RowBox[{
              StyleBox["For",
                FormatType->StandardForm], 
              StyleBox["[",
                FormatType->StandardForm], 
              RowBox[{
                StyleBox[\(i = 1\),
                  FormatType->StandardForm], 
                StyleBox[",",
                  FormatType->StandardForm], 
                RowBox[{
                  StyleBox["i",
                    FormatType->StandardForm], 
                  StyleBox["\[LessEqual]",
                    FormatType->StandardForm,
                    FontFamily->"Mathematica1Mono"], 
                  StyleBox[\(Length[cplist]\),
                    FormatType->StandardForm]}], 
                StyleBox[",",
                  FormatType->StandardForm], 
                StyleBox[\(i++\),
                  FormatType->StandardForm], 
                StyleBox[",",
                  FormatType->StandardForm], 
                StyleBox["\[IndentingNewLine]",
                  FormatType->StandardForm], 
                
                StyleBox[\(If[cplist[\([i, 1]\)] > 0, Write[fileid, 1], \ 
                    Write[fileid, 0]]\),
                  FormatType->StandardForm]}], 
              StyleBox["\n",
                FormatType->StandardForm], 
              StyleBox["      ",
                FormatType->StandardForm], 
              StyleBox["]",
                FormatType->StandardForm]}], 
            StyleBox[";",
              FormatType->StandardForm], 
            StyleBox["\n",
              FormatType->StandardForm], 
            StyleBox["    ",
              FormatType->StandardForm], 
            StyleBox[\(Write[fileid, 555]\),
              FormatType->StandardForm], 
            StyleBox[";",
              FormatType->StandardForm], 
            StyleBox["\n",
              FormatType->StandardForm], 
            StyleBox["    ",
              FormatType->StandardForm], 
            StyleBox[\(Close[fileid]\),
              FormatType->StandardForm], 
            StyleBox[";",
              FormatType->StandardForm], 
            StyleBox["\[IndentingNewLine]",
              FormatType->StandardForm], 
            StyleBox["\[IndentingNewLine]",
              FormatType->StandardForm], 
            RowBox[{
              StyleBox["For",
                FormatType->StandardForm], 
              StyleBox["[",
                FormatType->StandardForm], 
              RowBox[{
                StyleBox[\(i = 1\),
                  FormatType->StandardForm], 
                StyleBox[",",
                  FormatType->StandardForm], 
                RowBox[{
                  StyleBox["i",
                    FormatType->StandardForm], 
                  StyleBox["\[LessEqual]",
                    FormatType->StandardForm,
                    FontFamily->"Mathematica1Mono"], 
                  StyleBox[\(Length[cplist]\),
                    FormatType->StandardForm]}], 
                StyleBox[",",
                  FormatType->StandardForm], 
                StyleBox[\(i++\),
                  FormatType->StandardForm], 
                StyleBox[",",
                  FormatType->StandardForm], 
                StyleBox["\[IndentingNewLine]",
                  FormatType->StandardForm], 
                RowBox[{
                  StyleBox["For",
                    FormatType->StandardForm], 
                  StyleBox["[",
                    FormatType->StandardForm], 
                  RowBox[{
                    StyleBox[\(j = 1\),
                      FormatType->StandardForm], 
                    StyleBox[",",
                      FormatType->StandardForm], 
                    RowBox[{
                      StyleBox["j",
                        FormatType->StandardForm], 
                      StyleBox["\[LessEqual]",
                        FormatType->StandardForm,
                        FontFamily->"Mathematica1Mono"], 
                      StyleBox[\(Length[cplist]\),
                        FormatType->StandardForm]}], 
                    StyleBox[",",
                      FormatType->StandardForm], 
                    StyleBox[\(j++\),
                      FormatType->StandardForm], 
                    StyleBox[",",
                      FormatType->StandardForm], 
                    StyleBox["\[IndentingNewLine]",
                      FormatType->StandardForm], 
                    
                    StyleBox[\(If[
                        i\  != \ j, \[IndentingNewLine]ex = 
                          cplist[\([i, 2]\)]; 
                        ex1 = cplist[\([j, 2]\)]; \[IndentingNewLine]If[
                          ex[\([1]\)] == ex1[\([1]\)]\  && \ 
                            ex[\([2]\)] == ex1[\([2]\)], 
                          pdataa = Append[pdataa, j]; \[IndentingNewLine]If[
                            cplist[\([i, 1]\)] > 0, 
                            k = \(cpinfo[\([i]\)]\)[\([2, 1]\)] + 1, 
                            k = \(cpinfo[\([i]\)]\)[\([2, 2]\)] + 
                                1]; \[IndentingNewLine]under = 
                            CrossSign[
                              spd[\([2, \(cpinfo[\([i]\)]\)[\([1, 1]\)] + 
                                    1]\)], 
                              spd[\([2, \(cpinfo[\([i]\)]\)[\([1, 2]\)] + 
                                    1]\)], 
                              spd[\([2, k]\)]]; \[IndentingNewLine]If[
                            cplist[\([i, 1]\)] > 0, \ 
                            If[under == True, pdatab = Append[pdatab, 2], 
                              pdatab = Append[pdatab, 4]], 
                            If[under == True, pdatab = Append[pdatab, 3], 
                              pdatab = 
                                Append[pdatab, 
                                  1]]]\[IndentingNewLine]]\[IndentingNewLine]]\
\),
                      FormatType->StandardForm]}], 
                  StyleBox["\n",
                    FormatType->StandardForm], 
                  StyleBox["      ",
                    FormatType->StandardForm], 
                  StyleBox["]",
                    FormatType->StandardForm]}]}], 
              StyleBox["\[IndentingNewLine]",
                FormatType->StandardForm], 
              StyleBox["]",
                FormatType->StandardForm]}], 
            StyleBox[";",
              FormatType->StandardForm], 
            StyleBox["\[IndentingNewLine]",
              FormatType->StandardForm], 
            RowBox[{
              StyleBox["For",
                FormatType->StandardForm], 
              StyleBox["[",
                FormatType->StandardForm], 
              RowBox[{
                StyleBox[\(i = 1\),
                  FormatType->StandardForm], 
                StyleBox[",",
                  FormatType->StandardForm], 
                RowBox[{
                  StyleBox["i",
                    FormatType->StandardForm], 
                  StyleBox["\[LessEqual]",
                    FormatType->StandardForm,
                    FontFamily->"Mathematica1Mono"], 
                  StyleBox[\(Length[pdataa]\),
                    FormatType->StandardForm]}], 
                StyleBox[",",
                  FormatType->StandardForm], 
                StyleBox[\(i++\),
                  FormatType->StandardForm], 
                StyleBox[",",
                  FormatType->StandardForm], 
                StyleBox[" ",
                  FormatType->StandardForm], 
                
                StyleBox[\(If[pdatab[\([i]\)] == 2, 
                    pdata = Append[pdata, \(-pdataa[\([i]\)]\)]]; 
                  If[pdatab[\([i]\)] == 4, 
                    pdata = Append[pdata, pdataa[\([i]\)]]\ ]\),
                  FormatType->StandardForm]}], 
              StyleBox["     ",
                FormatType->StandardForm], 
              StyleBox["\[IndentingNewLine]",
                FormatType->StandardForm], 
              StyleBox["]",
                FormatType->StandardForm]}], 
            StyleBox[";",
              FormatType->StandardForm], 
            StyleBox["\[IndentingNewLine]",
              FormatType->StandardForm], 
            StyleBox[\(Print["\<The corresponding p-data:\>"]\),
              FormatType->StandardForm], 
            StyleBox[";",
              FormatType->StandardForm], 
            StyleBox["\[IndentingNewLine]",
              FormatType->StandardForm], \(Print[{nump, pdata}]\), ";", 
            StyleBox["\n",
              FormatType->StandardForm], 
            StyleBox["    ",
              FormatType->StandardForm], 
            
            StyleBox[\( (*\ \(Print["\<Outputted to PLFromSnappea.sp which is \
a data file of the function GetPdatabyTracking[].\>"];\)\ *) \),
              FormatType->StandardForm], 
            StyleBox["\n",
              FormatType->StandardForm], 
            StyleBox["    ",
              FormatType->StandardForm], 
            StyleBox[\(Return[True]\),
              FormatType->StandardForm]}]}], 
        StyleBox["\n",
          FormatType->StandardForm], 
        StyleBox["    ",
          FormatType->StandardForm], 
        StyleBox["]",
          FormatType->StandardForm]}]}], "\[IndentingNewLine]", 
    RowBox[{\(CheckIntersection[p1_, p2_, p3_, p4_] := 
        Block[{f1, 
            f2}, \[IndentingNewLine]f1 = \((p2[\([2]\)] - p1[\([2]\)])\)*
                p3[\([1]\)] + \((p1[\([1]\)] - p2[\([1]\)])\)*
                p3[\([2]\)] - \((p1[\([1]\)]*p2[\([2]\)] - 
                  p2[\([1]\)]*
                    p1[\([2]\)])\); \[IndentingNewLine]f2 = \ \((p2[\([2]\)] \
- p1[\([2]\)])\)*p4[\([1]\)] + \((p1[\([1]\)] - p2[\([1]\)])\)*
                p4[\([2]\)] - \((p1[\([1]\)]*p2[\([2]\)] - 
                  p2[\([1]\)]*p1[\([2]\)])\); \[IndentingNewLine]If[
            f1*f2 < 0, \[IndentingNewLine]Return[
              CrossingPoint[p1, p2, p3, p4]], {}]\[IndentingNewLine]]\), 
      "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
    RowBox[{\(GetCrossingSequence[xy_, crossnum_] := 
        Block[{i, j, k, l, n1, n2, com, len, cr, 
            crossing = {}}, \[IndentingNewLine]len = Length[xy]; \  (*\ 
            without\ the\ duplicate\ of\ coordinates\ \
*) \[IndentingNewLine]com = Length[crossnum]; \[IndentingNewLine]For[i = 1, 
            i \[LessEqual] len, \(i++\), \[IndentingNewLine]For[j = 1, 
              j \[LessEqual] len, \(j++\), \[IndentingNewLine]If[
                i \[NotEqual] j, \[IndentingNewLine]l = 1; 
                n1 = i + 1; \[IndentingNewLine]For[k = 1, 
                  k \[LessEqual] com, \(k++\), \[IndentingNewLine]If[
                    i \[Equal] crossnum[\([k]\)], n1 = l; 
                    Break[]]; \[IndentingNewLine]l = 
                    crossnum[\([k]\)] + 1]; \[IndentingNewLine]l = 1; 
                n2 = j + 1; \[IndentingNewLine]For[k = 1, 
                  k \[LessEqual] com, \(k++\), \[IndentingNewLine]If[
                    j \[Equal] crossnum[\([k]\)], n2 = l; 
                    Break[]]; \[IndentingNewLine]l = 
                    crossnum[\([k]\)] + 1]; \[IndentingNewLine]cr = 
                  CheckIntersection[xy[\([i]\)], xy[\([n1]\)], xy[\([j]\)], 
                    xy[\([n2]\)]]; \[IndentingNewLine]If[cr \[NotEqual] {}, 
                  crossing = 
                    Append[crossing, {i, 
                        cr}]]\[IndentingNewLine]]\[IndentingNewLine]]\
\[IndentingNewLine]]; \[IndentingNewLine]Return[
            crossing]\[IndentingNewLine]]\), 
      "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
    RowBox[{
      StyleBox[" ",
        WindowSize->{496, 537},
        WindowMargins->{{129, Automatic}, {Automatic, 26}},
        FontFamily->"Courier",
        FontWeight->"Bold"], 
      RowBox[{
        StyleBox[\(SnapPeaDataFromPLData[fname_]\),
          WindowSize->{496, 537},
          WindowMargins->{{129, Automatic}, {Automatic, 26}},
          FontFamily->"Courier",
          FontWeight->"Bold"], 
        StyleBox[":=",
          WindowSize->{496, 537},
          WindowMargins->{{129, Automatic}, {Automatic, 26}},
          FontFamily->"Courier",
          FontWeight->"Bold"], 
        RowBox[{
          StyleBox["Block",
            WindowSize->{496, 537},
            WindowMargins->{{129, Automatic}, {Automatic, 26}},
            FontFamily->"Courier",
            FontWeight->"Bold"], 
          StyleBox["[",
            WindowSize->{496, 537},
            WindowMargins->{{129, Automatic}, {Automatic, 26}},
            FontFamily->"Courier",
            FontWeight->"Bold"], 
          RowBox[{
            
            StyleBox[\({i, j, k = 0, sn, ex, len, com, crossnum = {}, 
                compnumxy = {}, xy = {}, x, y, x0, y0, crossinginfo = {}, 
                cplist = {}, snapinfo = {}, fileid}\),
              WindowSize->{496, 537},
              WindowMargins->{{129, Automatic}, {Automatic, 26}},
              FontFamily->"Courier",
              FontWeight->"Bold"], 
            StyleBox[",",
              WindowSize->{496, 537},
              WindowMargins->{{129, Automatic}, {Automatic, 26}},
              FontFamily->"Courier",
              FontWeight->"Bold"], 
            StyleBox["\n",
              WindowSize->{496, 537},
              WindowMargins->{{129, Automatic}, {Automatic, 26}},
              FontFamily->"Courier",
              FontWeight->"Bold"], 
            StyleBox["    ",
              WindowSize->{496, 537},
              WindowMargins->{{129, Automatic}, {Automatic, 26}},
              FontFamily->"Courier",
              FontWeight->"Bold"], 
            RowBox[{
              StyleBox[\(sn = OpenRead[fname]\),
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              
              StyleBox[\(If[sn == $Failed, 
                  Print["\<Cannot open \>", fname, "\<.\>"]; Return[]]\),
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[\(com = Read[sn, Number]\),
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              RowBox[{
                StyleBox["For",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                StyleBox["[",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                RowBox[{
                  StyleBox[\(i = 1\),
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox[",",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  RowBox[{
                    StyleBox["i",
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Courier",
                      FontWeight->"Bold"], 
                    StyleBox["\[LessEqual]",
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Mathematica1Mono",
                      FontWeight->"Bold"], 
                    StyleBox["com",
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Courier",
                      FontWeight->"Bold"]}], 
                  StyleBox[",",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox[\(i++\),
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox[",",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox["\n",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox["      ",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  
                  StyleBox[\(crossnum = Append[crossnum, Read[sn, Number]];\),
                    
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"]}], 
                StyleBox["\n",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                StyleBox["      ",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                
                StyleBox[\( (*\ 
                    crossing\ numbers\ of\ each\ \(\(component\)\(.\)\)\ *) \
\),
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                StyleBox["\n",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                StyleBox["      ",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                StyleBox["]",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"]}], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[\(len = Read[sn, Number]\),
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[\(x0 = Read[sn, Number]\),
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[" ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[\(y0 = Read[sn, Number]\),
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[\(xy = Append[xy, {x0, y0}]\),
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[" ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[\(k++\),
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              RowBox[{
                StyleBox["For",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                StyleBox["[",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                RowBox[{
                  StyleBox[\(i = 3\),
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox[",",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  RowBox[{
                    StyleBox["i",
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Courier",
                      FontWeight->"Bold"], 
                    StyleBox["\[LessEqual]",
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Mathematica1Mono",
                      FontWeight->"Bold"], 
                    StyleBox[\(2*len\),
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Courier",
                      FontWeight->"Bold"]}], 
                  StyleBox[",",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox[\(i += 2\),
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox[",",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox["\n",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox["      ",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  RowBox[{
                    StyleBox[\(x = Read[sn, Number]\),
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Courier",
                      FontWeight->"Bold"], 
                    StyleBox[";",
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Courier",
                      FontWeight->"Bold"], 
                    StyleBox[" ",
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Courier",
                      FontWeight->"Bold"], 
                    StyleBox[\(y = Read[sn, Number]\),
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Courier",
                      FontWeight->"Bold"], 
                    StyleBox[";",
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Courier",
                      FontWeight->"Bold"], 
                    StyleBox["\n",
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Courier",
                      FontWeight->"Bold"], 
                    StyleBox["      ",
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Courier",
                      FontWeight->"Bold"], 
                    
                    StyleBox[\(If[x != x0\  || \ y != y0, 
                        xy = Append[xy, {x, y}]; \ \(k++\)]\),
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Courier",
                      FontWeight->"Bold"], 
                    StyleBox[";",
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Courier",
                      FontWeight->"Bold"], 
                    StyleBox["\n",
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Courier",
                      FontWeight->"Bold"], 
                    StyleBox["      ",
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Courier",
                      FontWeight->"Bold"], 
                    RowBox[{
                      StyleBox["If",
                        WindowSize->{496, 537},
                        WindowMargins->{{129, Automatic}, {Automatic, 26}},
                        FontFamily->"Courier",
                        FontWeight->"Bold"], 
                      StyleBox["[",
                        WindowSize->{496, 537},
                        WindowMargins->{{129, Automatic}, {Automatic, 26}},
                        FontFamily->"Courier",
                        FontWeight->"Bold"], 
                      RowBox[{
                        RowBox[{
                          RowBox[{
                            StyleBox["x",
                              WindowSize->{496, 537},
                              WindowMargins->{{129, Automatic}, {Automatic, 
                              26}},
                              FontFamily->"Courier",
                              FontWeight->"Bold"], 
                            StyleBox["\[Equal]",
                              WindowSize->{496, 537},
                              WindowMargins->{{129, Automatic}, {Automatic, 
                              26}},
                              FontFamily->"Mathematica1Mono",
                              FontWeight->"Bold"], 
                            StyleBox["x0",
                              WindowSize->{496, 537},
                              WindowMargins->{{129, Automatic}, {Automatic, 
                              26}},
                              FontFamily->"Courier",
                              FontWeight->"Bold"]}], 
                          StyleBox[" ",
                            WindowSize->{496, 537},
                            WindowMargins->{{129, Automatic}, {Automatic, 
                            26}},
                            FontFamily->"Courier",
                            FontWeight->"Bold"], 
                          StyleBox["&&",
                            WindowSize->{496, 537},
                            WindowMargins->{{129, Automatic}, {Automatic, 
                            26}},
                            FontFamily->"Courier",
                            FontWeight->"Bold"], 
                          StyleBox[" ",
                            WindowSize->{496, 537},
                            WindowMargins->{{129, Automatic}, {Automatic, 
                            26}},
                            FontFamily->"Courier",
                            FontWeight->"Bold"], 
                          RowBox[{
                            StyleBox["y",
                              WindowSize->{496, 537},
                              WindowMargins->{{129, Automatic}, {Automatic, 
                              26}},
                              FontFamily->"Courier",
                              FontWeight->"Bold"], 
                            StyleBox["\[Equal]",
                              WindowSize->{496, 537},
                              WindowMargins->{{129, Automatic}, {Automatic, 
                              26}},
                              FontFamily->"Mathematica1Mono",
                              FontWeight->"Bold"], 
                            StyleBox["y0",
                              WindowSize->{496, 537},
                              WindowMargins->{{129, Automatic}, {Automatic, 
                              26}},
                              FontFamily->"Courier",
                              FontWeight->"Bold"]}]}], 
                        StyleBox[",",
                          WindowSize->{496, 537},
                          WindowMargins->{{129, Automatic}, {Automatic, 26}},
                          FontFamily->"Courier",
                          FontWeight->"Bold"], 
                        RowBox[{
                          StyleBox[\(compnumxy = Append[compnumxy, k]\),
                            WindowSize->{496, 537},
                            WindowMargins->{{129, Automatic}, {Automatic, 
                            26}},
                            FontFamily->"Courier",
                            FontWeight->"Bold"], 
                          StyleBox[";",
                            WindowSize->{496, 537},
                            WindowMargins->{{129, Automatic}, {Automatic, 
                            26}},
                            FontFamily->"Courier",
                            FontWeight->"Bold"], 
                          StyleBox["\n",
                            WindowSize->{496, 537},
                            WindowMargins->{{129, Automatic}, {Automatic, 
                            26}},
                            FontFamily->"Courier",
                            FontWeight->"Bold"], 
                          StyleBox["        ",
                            WindowSize->{496, 537},
                            WindowMargins->{{129, Automatic}, {Automatic, 
                            26}},
                            FontFamily->"Courier",
                            FontWeight->"Bold"], 
                          RowBox[{
                            StyleBox["If",
                              WindowSize->{496, 537},
                              WindowMargins->{{129, Automatic}, {Automatic, 
                              26}},
                              FontFamily->"Courier",
                              FontWeight->"Bold"], 
                            StyleBox["[",
                              WindowSize->{496, 537},
                              WindowMargins->{{129, Automatic}, {Automatic, 
                              26}},
                              FontFamily->"Courier",
                              FontWeight->"Bold"], 
                            RowBox[{
                              RowBox[{
                                StyleBox[\(2*len - 1\),
                                  WindowSize->{496, 537},
                                  WindowMargins->{{129, Automatic}, {
                                  Automatic, 26}},
                                  FontFamily->"Courier",
                                  FontWeight->"Bold"], 
                                StyleBox["\[LessEqual]",
                                  WindowSize->{496, 537},
                                  WindowMargins->{{129, Automatic}, {
                                  Automatic, 26}},
                                  FontFamily->"Mathematica1Mono",
                                  FontWeight->"Bold"], 
                                StyleBox["i",
                                  WindowSize->{496, 537},
                                  WindowMargins->{{129, Automatic}, {
                                  Automatic, 26}},
                                  FontFamily->"Courier",
                                  FontWeight->"Bold"]}], 
                              StyleBox[",",
                                WindowSize->{496, 537},
                                WindowMargins->{{129, Automatic}, {Automatic, 
                                26}},
                                FontFamily->"Courier",
                                FontWeight->"Bold"], 
                              StyleBox[\(Break[]\),
                                WindowSize->{496, 537},
                                WindowMargins->{{129, Automatic}, {Automatic, 
                                26}},
                                FontFamily->"Courier",
                                FontWeight->"Bold"]}], 
                            StyleBox["]",
                              WindowSize->{496, 537},
                              WindowMargins->{{129, Automatic}, {Automatic, 
                              26}},
                              FontFamily->"Courier",
                              FontWeight->"Bold"]}], 
                          StyleBox[";",
                            WindowSize->{496, 537},
                            WindowMargins->{{129, Automatic}, {Automatic, 
                            26}},
                            FontFamily->"Courier",
                            FontWeight->"Bold"], 
                          StyleBox["\n",
                            WindowSize->{496, 537},
                            WindowMargins->{{129, Automatic}, {Automatic, 
                            26}},
                            FontFamily->"Courier",
                            FontWeight->"Bold"], 
                          StyleBox["        ",
                            WindowSize->{496, 537},
                            WindowMargins->{{129, Automatic}, {Automatic, 
                            26}},
                            FontFamily->"Courier",
                            FontWeight->"Bold"], 
                          StyleBox[\(x0 = Read[sn, Number]\),
                            WindowSize->{496, 537},
                            WindowMargins->{{129, Automatic}, {Automatic, 
                            26}},
                            FontFamily->"Courier",
                            FontWeight->"Bold"], 
                          StyleBox[";",
                            WindowSize->{496, 537},
                            WindowMargins->{{129, Automatic}, {Automatic, 
                            26}},
                            FontFamily->"Courier",
                            FontWeight->"Bold"], 
                          StyleBox[" ",
                            WindowSize->{496, 537},
                            WindowMargins->{{129, Automatic}, {Automatic, 
                            26}},
                            FontFamily->"Courier",
                            FontWeight->"Bold"], 
                          StyleBox[\(y0 = Read[sn, Number]\),
                            WindowSize->{496, 537},
                            WindowMargins->{{129, Automatic}, {Automatic, 
                            26}},
                            FontFamily->"Courier",
                            FontWeight->"Bold"], 
                          StyleBox[";",
                            WindowSize->{496, 537},
                            WindowMargins->{{129, Automatic}, {Automatic, 
                            26}},
                            FontFamily->"Courier",
                            FontWeight->"Bold"], 
                          StyleBox["\n",
                            WindowSize->{496, 537},
                            WindowMargins->{{129, Automatic}, {Automatic, 
                            26}},
                            FontFamily->"Courier",
                            FontWeight->"Bold"], 
                          StyleBox["        ",
                            WindowSize->{496, 537},
                            WindowMargins->{{129, Automatic}, {Automatic, 
                            26}},
                            FontFamily->"Courier",
                            FontWeight->"Bold"], 
                          StyleBox[\(xy = Append[xy, {x0, y0}]\),
                            WindowSize->{496, 537},
                            WindowMargins->{{129, Automatic}, {Automatic, 
                            26}},
                            FontFamily->"Courier",
                            FontWeight->"Bold"], 
                          StyleBox[";",
                            WindowSize->{496, 537},
                            WindowMargins->{{129, Automatic}, {Automatic, 
                            26}},
                            FontFamily->"Courier",
                            FontWeight->"Bold"], 
                          StyleBox[" ",
                            WindowSize->{496, 537},
                            WindowMargins->{{129, Automatic}, {Automatic, 
                            26}},
                            FontFamily->"Courier",
                            FontWeight->"Bold"], 
                          StyleBox[\(i += 2\),
                            WindowSize->{496, 537},
                            WindowMargins->{{129, Automatic}, {Automatic, 
                            26}},
                            FontFamily->"Courier",
                            FontWeight->"Bold"], 
                          StyleBox[";",
                            WindowSize->{496, 537},
                            WindowMargins->{{129, Automatic}, {Automatic, 
                            26}},
                            FontFamily->"Courier",
                            FontWeight->"Bold"], 
                          StyleBox[" ",
                            WindowSize->{496, 537},
                            WindowMargins->{{129, Automatic}, {Automatic, 
                            26}},
                            FontFamily->"Courier",
                            FontWeight->"Bold"], 
                          StyleBox[\(k++\),
                            WindowSize->{496, 537},
                            WindowMargins->{{129, Automatic}, {Automatic, 
                            26}},
                            FontFamily->"Courier",
                            FontWeight->"Bold"], 
                          StyleBox[";",
                            WindowSize->{496, 537},
                            WindowMargins->{{129, Automatic}, {Automatic, 
                            26}},
                            FontFamily->"Courier",
                            FontWeight->"Bold"]}]}], 
                      StyleBox["\n",
                        WindowSize->{496, 537},
                        WindowMargins->{{129, Automatic}, {Automatic, 26}},
                        FontFamily->"Courier",
                        FontWeight->"Bold"], 
                      StyleBox["        ",
                        WindowSize->{496, 537},
                        WindowMargins->{{129, Automatic}, {Automatic, 26}},
                        FontFamily->"Courier",
                        FontWeight->"Bold"], 
                      StyleBox["]",
                        WindowSize->{496, 537},
                        WindowMargins->{{129, Automatic}, {Automatic, 26}},
                        FontFamily->"Courier",
                        FontWeight->"Bold"]}]}]}], 
                StyleBox["\n",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                StyleBox["      ",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                StyleBox["]",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"]}], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              RowBox[{
                StyleBox["For",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                StyleBox["[",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                RowBox[{
                  StyleBox[\(i = 1\),
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox[",",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  RowBox[{
                    StyleBox["i",
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Courier",
                      FontWeight->"Bold"], 
                    StyleBox["\[LessEqual]",
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Mathematica1Mono",
                      FontWeight->"Bold"], 
                    StyleBox[\(crossnum[\([com]\)]/2\),
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Courier",
                      FontWeight->"Bold"]}], 
                  StyleBox[",",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox[\(i++\),
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox[",",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox["\n",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox["      ",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox[\(\(ex = {Read[sn, Number], Read[sn, Number]};\)\n
                    \ \ \ \ \ \ \(cplist = Append[cplist, ex];\)\),
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"]}], 
                StyleBox["\n",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                StyleBox["      ",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                StyleBox["]",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"]}], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              RowBox[{
                StyleBox["For",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                StyleBox["[",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                RowBox[{
                  StyleBox[\(i = 1\),
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox[",",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  RowBox[{
                    StyleBox["i",
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Courier",
                      FontWeight->"Bold"], 
                    StyleBox["\[LessEqual]",
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Mathematica1Mono",
                      FontWeight->"Bold"], 
                    StyleBox[\(crossnum[\([com]\)]\),
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Courier",
                      FontWeight->"Bold"]}], 
                  StyleBox[",",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox[\(i++\),
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox[",",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox["\n",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox["      ",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  
                  StyleBox[\(crossinginfo = 
                      Append[crossinginfo, Read[sn, Number]]\),
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"]}], 
                StyleBox["\n",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                StyleBox["      ",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                StyleBox["]",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"]}], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[\(Close[sn]\),
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[" ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[\(snapinfo = {}\),
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              
              StyleBox[\(For[i = 1, 
                  i <= crossnum[\([com]\)]/
                      2, \(i++\), \n\ \ \ \ \ \ snapinfo = 
                    Append[snapinfo, {cplist[\([i, 2]\)], 
                        cplist[\([i, 1]\)]}]\n\ \ \ \ \ \ ]\),
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[\(len = Length[xy]\),
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              RowBox[{
                StyleBox["fileid",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                StyleBox["=",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                RowBox[{
                  StyleBox["OpenWrite",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox["[",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  RowBox[{
                    StyleBox["\"\<SnappeaFromPL.pl\>\"",
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Courier",
                      FontWeight->"Bold"], 
                    StyleBox[",",
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Courier",
                      FontWeight->"Bold"], 
                    RowBox[{
                      StyleBox["FormatType",
                        WindowSize->{496, 537},
                        WindowMargins->{{129, Automatic}, {Automatic, 26}},
                        FontFamily->"Courier",
                        FontWeight->"Bold"], 
                      StyleBox["\[Rule]",
                        WindowSize->{496, 537},
                        WindowMargins->{{129, Automatic}, {Automatic, 26}},
                        FontFamily->"Mathematica1Mono",
                        FontWeight->"Bold"], 
                      StyleBox["OutputForm",
                        WindowSize->{496, 537},
                        WindowMargins->{{129, Automatic}, {Automatic, 26}},
                        FontFamily->"Courier",
                        FontWeight->"Bold"]}]}], 
                  StyleBox["]",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"]}]}], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              
              StyleBox[\(Write[
                  fileid, "\<% Link Projection by K2K programmed by \
M.Ochiai\>"]\),
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[\(Write[fileid, com]\),
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[\(Write[fileid, 0, "\< \>", 0]\),
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              
              StyleBox[\(For[i = 1, 
                  i < com, \(i++\), \n\ \ \ \ \ \ Write[fileid, 
                    compnumxy[\([i]\)], "\< \>", 
                    compnumxy[\([i]\)]]\n\ \ \ \ \ \ ]\),
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[\(Write[fileid, len]\),
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              RowBox[{
                StyleBox["For",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                StyleBox["[",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                RowBox[{
                  StyleBox[\(i = 1\),
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox[",",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  RowBox[{
                    StyleBox["i",
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Courier",
                      FontWeight->"Bold"], 
                    StyleBox["\[LessEqual]",
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Mathematica1Mono",
                      FontWeight->"Bold"], 
                    StyleBox["len",
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Courier",
                      FontWeight->"Bold"]}], 
                  StyleBox[",",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox[\(i++\),
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox[",",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox["\n",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox["      ",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  
                  StyleBox[\(Write[fileid, xy[\([i, 1]\)], "\< \>", 
                      xy[\([i, 2]\)]]\),
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"]}], 
                StyleBox["]",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"]}], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[\(Write[fileid, len]\),
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[\(j = 1\),
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[" ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[\(k = 0\),
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              RowBox[{
                StyleBox["For",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                StyleBox["[",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                RowBox[{
                  StyleBox[\(i = 1\),
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox[",",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  RowBox[{
                    StyleBox["i",
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Courier",
                      FontWeight->"Bold"], 
                    StyleBox["\[LessEqual]",
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Mathematica1Mono",
                      FontWeight->"Bold"], 
                    StyleBox["len",
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Courier",
                      FontWeight->"Bold"]}], 
                  StyleBox[",",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox[\(i++\),
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox[",",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox["\n",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox["      ",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  
                  StyleBox[\(If[i == compnumxy[\([j]\)], 
                        Write[fileid, i - 1, "\< \>", k]; 
                        k = compnumxy[\([j]\)]; \ \(j++\), \ 
                        Write[fileid, i - 1, "\< \>", i]];\),
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"]}], 
                StyleBox["\n",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                StyleBox["      ",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                StyleBox["]",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"]}], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[\(len = Length[snapinfo]\),
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[\(Write[fileid, len]\),
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              RowBox[{
                StyleBox["For",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                StyleBox["[",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                RowBox[{
                  StyleBox[\(i = 1\),
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox[",",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  RowBox[{
                    StyleBox["i",
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Courier",
                      FontWeight->"Bold"], 
                    StyleBox["\[LessEqual]",
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Mathematica1Mono",
                      FontWeight->"Bold"], 
                    StyleBox["len",
                      WindowSize->{496, 537},
                      WindowMargins->{{129, Automatic}, {Automatic, 26}},
                      FontFamily->"Courier",
                      FontWeight->"Bold"]}], 
                  StyleBox[",",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox[\(i++\),
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox[",",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox["\n",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  StyleBox["       ",
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"], 
                  
                  StyleBox[\(Write[fileid, snapinfo[\([i, 1]\)], "\< \>", 
                      snapinfo[\([i, 2]\)]]\),
                    WindowSize->{496, 537},
                    WindowMargins->{{129, Automatic}, {Automatic, 26}},
                    FontFamily->"Courier",
                    FontWeight->"Bold"]}], 
                StyleBox["\n",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                StyleBox["      ",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"], 
                StyleBox["]",
                  WindowSize->{496, 537},
                  WindowMargins->{{129, Automatic}, {Automatic, 26}},
                  FontFamily->"Courier",
                  FontWeight->"Bold"]}], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[\(Write[fileid, \(-1\)]\),
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[\(Close[fileid]\),
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              
              StyleBox[\(Print["\<Outputted to SnappeaFromPL.pl which must \
been only used in J. Weeks's SnapPea.\>"]\),
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[";",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["\n",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox["    ",
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"], 
              StyleBox[\(Return[True]\),
                WindowSize->{496, 537},
                WindowMargins->{{129, Automatic}, {Automatic, 26}},
                FontFamily->"Courier",
                FontWeight->"Bold"]}]}], 
          StyleBox["\n",
            WindowSize->{496, 537},
            WindowMargins->{{129, Automatic}, {Automatic, 26}},
            FontFamily->"Courier",
            FontWeight->"Bold"], 
          StyleBox["    ",
            WindowSize->{496, 537},
            WindowMargins->{{129, Automatic}, {Automatic, 26}},
            FontFamily->"Courier",
            FontWeight->"Bold"], 
          StyleBox["]",
            WindowSize->{496, 537},
            WindowMargins->{{129, Automatic}, {Automatic, 26}},
            FontFamily->"Courier",
            FontWeight->"Bold"]}]}]}]}], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(General::"spell1" \(\(:\)\(\ \)\) 
      "Possible spelling error: new symbol name \"\!\(pdataa\)\" is similar \
to existing symbol \"\!\(pdata\)\"."\)], "Message"],

Cell[BoxData[
    \(General::"spell" \(\(:\)\(\ \)\) 
      "Possible spelling error: new symbol name \"\!\(pdatab\)\" is similar \
to existing symbols \!\({pdata, pdataa}\)."\)], "Message"]
}, Open  ]],

Cell[BoxData[{
    \(\(\(KnotbyGauseanFormFromFile[fname_] := 
      Block[{insn, outsn, len0 = 0, len1, ex0, ex1, ex, infile, outfile, 
          retcode, \ link}, \[IndentingNewLine]insn = 
          OpenRead[fname]; \[IndentingNewLine]If[insn == $Failed, 
          Print["\<Can't open \>", fname]; 
          Return[\(-2\)]]; \[IndentingNewLine]outsn = 
          OpenWrite[fname <> "\<.gf\>", FormatType \[Rule] OutputForm, 
            PageWidth \[Rule] 300]; \[IndentingNewLine]While[
          True, \[IndentingNewLine]ex = 
            Read[insn, String]; \[IndentingNewLine]If[ex \[Equal] EndOfFile, 
            Break[]]; \[IndentingNewLine]ex = 
            StringReplace[
              ex, "\<)(\>" \[Rule] "\<),(\>"]; \[IndentingNewLine]ex = 
            StringReplace[
              StringReplace[
                ex, "\<(\>" \[Rule] "\<{\>"], "\<)\>" \[Rule] "\<}\>"]; \
\[IndentingNewLine]ex0 = ToExpression[ex]; \ 
          ex1 = Flatten[ex0]; \[IndentingNewLine]len1 = 
            Length[ex1]/2; \[IndentingNewLine]If[len0 \[Equal] 0, 
            len0 = len1, 
            If[len0 \[NotEqual] len1, 
              Print["\<Detect a different length data. \>", 
                ex0]; \[IndentingNewLine]Close[insn]; \ Close[outsn]; \ 
              Return[\(-1\)]]]; \[IndentingNewLine]ex = 
            StringReplace[
              StringReplace[
                StringReplace[
                  ex, "\<{\>" \[Rule] "\<\>"], "\<}\>" \[Rule] "\< \>"], "\<,\
\>" \[Rule] "\< \>"]; \[IndentingNewLine]Write[outsn, 
            ex];\[IndentingNewLine]]; \[IndentingNewLine]Write[outsn, 
          555, "\< \>", 555]; \[IndentingNewLine]Close[insn]; \ 
        Close[outsn]; \[IndentingNewLine]infile = 
          fname <> "\<.gf\>"; \[IndentingNewLine]outfile = 
          fname <> "\<.prd\>"; \[IndentingNewLine]link = 
          Install["\<./knotbygauseanform\>", \ 
            LinkMode -> Launch]; \[IndentingNewLine]retcode = 
          KnotbyGauseanForm[len0, infile, 
            outfile, {}]; \[IndentingNewLine]Uninstall[
          link]; \[IndentingNewLine]If[retcode \[NotEqual] 1, 
          Print["\<Fail to conversion.\>"]; Return[0], 
          Print["\<Outputted to a p-data file: \>", 
            outfile]; \[IndentingNewLine]Return[
            True]]\[IndentingNewLine]]\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\(\(KnotbyGauseanForm[ex_] := 
      Block[{i, k = 2, len, ex1, pdata, pdata2 = {}, \ 
          link}, \[IndentingNewLine]If[Not[ListQ[ex]]\  || \ StringQ[ex], 
          Print["\<Please input a Gausean form of a knot such as \>", {{1, 
                4}, {3, 8}, {5, 10}, {7, 14}, {9, 2}, {11, 16}, {13, 
                20}, {15, 6}, {17, 22}, {19, 12}, {21, 
                18}}]; \[IndentingNewLine]Return[
            False]\[IndentingNewLine]]; \[IndentingNewLine]\ 
        ex1 = Flatten[ex]; \[IndentingNewLine]len = 
          Length[ex1]; \[IndentingNewLine]pdata2 = 
          Table[0, {i, 2*len}]; \[IndentingNewLine]For[i = 1, 
          i \[LessEqual] len, 
          i += 2, \[IndentingNewLine]If[Mod[ex1[\([i]\)], 2] \[Equal] 0, \ 
            pdata2[\([k]\)] = ex1[\([i]\)]; \(k++\), \[IndentingNewLine]If[
              Mod[ex1[\([i + 1]\)], 2] \[Equal] 0, \ 
              pdata2[\([k]\)] = \(-ex1[\([i + 
                        1]\)]\); \(k++\)]]\[IndentingNewLine]]; \
\[IndentingNewLine]len /= 2; \[IndentingNewLine]link = 
          Install["\<./knotbygauseanform\>", \ 
            LinkMode -> Launch]; \[IndentingNewLine]pdata = 
          KnotbyGauseanForm[len, "\<\>", "\<\>", 
            pdata2]; \[IndentingNewLine]Uninstall[
          link]; \[IndentingNewLine]Print[pdata]; \ \[IndentingNewLine]Return[
          True]\[IndentingNewLine]]\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\(\(GauseanFormFromDT[dt_] := 
      Block[{i, len, gf = {}}, \[IndentingNewLine]len = 
          Length[dt]; \[IndentingNewLine]For[i = 1, 
          i \[LessEqual] len, \(i++\), \[IndentingNewLine]If[dt[\([i]\)] > 0, 
            gf = Append[gf, {2*i - 1, dt[\([i]\)]}], 
            gf = Append[
                gf, {\(-dt[\([i]\)]\), 2*i - 1}]]]; \[IndentingNewLine]Return[
          gf]\[IndentingNewLine]]\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\(\(KnotbyDT[ex_] := 
      Block[{i, len, pdata, \ link}, \[IndentingNewLine]len = 
          Length[ex]; \[IndentingNewLine]pdata = 
          Table[0, {i, 2*len}]; \[IndentingNewLine]For[i = 1, 
          i \[LessEqual] 
            len, \(i++\), \[IndentingNewLine]pdata[\([i + 
                  1]\)] = \(-ex[\([i]\)]\)\[IndentingNewLine]]; \
\[IndentingNewLine]link = 
          Install["\<./knotbygauseanform\>", \ 
            LinkMode -> Launch]; \[IndentingNewLine]pdata = 
          KnotbyGauseanForm[len, "\<\>", "\<\>", 
            pdata]; \[IndentingNewLine]Uninstall[
          link]; \[IndentingNewLine]Return[
          pdata]\[IndentingNewLine]]\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\(\(KnotbyDowkerThistlethwaiteNotation[ex_] := 
      KnotbyDT[ex]\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\(\(KnotbyDTFromFile[fname_] := 
      Block[{i, insn, len, ex, dtdata, pdata, \ 
          link}, \[IndentingNewLine]insn = 
          OpenRead[fname]; \[IndentingNewLine]If[insn == $Failed, 
          Print["\<Can't open \>", fname]; 
          Return[\(-2\)]]; \[IndentingNewLine]link = 
          Install["\<./knotbygauseanform\>", \ 
            LinkMode -> Launch]; \[IndentingNewLine]dtdata = 
          Table[0, {i, 200}]; \[IndentingNewLine]While[
          True, \[IndentingNewLine]ex = 
            Read[insn, Number]; \[IndentingNewLine]If[ex \[Equal] EndOfFile, 
            Break[]]; \[IndentingNewLine]len = ex; \[IndentingNewLine]ex = 
            Read[insn, Number]; \  (*\ 
            ex : \ data\ number\ *) \[IndentingNewLine]Print[
            ex]; \[IndentingNewLine]For[i = 1, 
            i \[LessEqual] len, \(i++\), \[IndentingNewLine]ex = 
              Read[insn, 
                Number]; \[IndentingNewLine]dtdata[\([i + 
                    1]\)] = \(-ex\)\[IndentingNewLine]]; \
\[IndentingNewLine]pdata = 
            KnotbyGauseanForm[len, "\<\>", "\<\>", 
              dtdata]; \[IndentingNewLine]Print[pdata]; \[IndentingNewLine]If[
            Not[ListQ[pdata]], \[IndentingNewLine]Close[insn]; \ 
            Return[False]]\[IndentingNewLine]]; \[IndentingNewLine]Uninstall[
          link]; \[IndentingNewLine]Close[insn]; \[IndentingNewLine]Return[
          True]\[IndentingNewLine]]\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\(\(KnotInternalFormbyDTFromFileToFile[infname_, outfname_] := 
      Block[{i, k = \(-1\), insn, outsn, len, ex, dtdata, pdata, \ 
          link}, \[IndentingNewLine]insn = 
          OpenRead[infname]; \[IndentingNewLine]If[insn == $Failed, 
          Print["\<Can't open \>", infname]; 
          Return[\(-2\)]]; \[IndentingNewLine]outsn = 
          OpenWrite[outfname, FormatType \[Rule] OutputForm, 
            PageWidth \[Rule] 100]; \[IndentingNewLine]If[outsn == $Failed, 
          Print["\<Can't open \>", outfname]; 
          Return[\(-2\)]]; \[IndentingNewLine]link = 
          Install["\<./knotbygauseanform\>", \ 
            LinkMode -> Launch]; \[IndentingNewLine]dtdata = 
          Table[0, {i, 200}]; \[IndentingNewLine]While[
          True, \[IndentingNewLine]ex = 
            Read[insn, Number]; \[IndentingNewLine]If[ex \[Equal] EndOfFile, 
            Break[]]; \[IndentingNewLine]len = ex; \[IndentingNewLine]ex = 
            Read[insn, Number]; \  (*\ 
            ex : \ data\ number\ *) \[IndentingNewLine]If[k < 100, Print[ex], 
            If[Mod[k, 1000] \[Equal] 0, Print[k]]]; \[IndentingNewLine]For[
            i = 1, i \[LessEqual] len, \(i++\), \[IndentingNewLine]ex = 
              Read[insn, 
                Number]; \[IndentingNewLine]dtdata[\([i + 
                    1]\)] = \(-ex\)\[IndentingNewLine]]; \
\[IndentingNewLine]pdata = 
            KnotbyGauseanForm[len, "\<\>", "\<\>", 
              dtdata]; \[IndentingNewLine]If[Not[ListQ[pdata]], 
            Print[pdata]; \[IndentingNewLine]Close[insn]; \ Close[outsn]; 
            Return[False], \(k++\); 
            Write[outsn, 
              pdata]]\[IndentingNewLine]]; \[IndentingNewLine]Uninstall[
          link]; \[IndentingNewLine]Write[outsn, 
          555]; \[IndentingNewLine]Write[outsn, "\<Total data count = \>", 
          k]; \[IndentingNewLine]Close[insn]; \ 
        Close[outsn]; \[IndentingNewLine]Print["\<Total data count = \>", 
          k]; \[IndentingNewLine]Return[
          True]\[IndentingNewLine]]\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(KnotbyDTFromFileToFile[infname_, outfname_] := 
      Block[{retcode, \ link}, \[IndentingNewLine]link = 
          Install["\<./ExternalKnotbyGause\>", \ 
            LinkMode -> Launch]; \[IndentingNewLine]retcode = 
          KnotbyGauseanForm[infname, outfname]; \[IndentingNewLine]Uninstall[
          link]; \[IndentingNewLine]Return[
          retcode]\[IndentingNewLine]]\)}], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\[IndentingNewLine]\)], "Input",
  InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\[IndentingNewLine]\($pdata = 
        Table[0, {i, 100}];\)\), "\[IndentingNewLine]", 
    \(\($updown = Table[0, {i, 100}];\)\), "\[IndentingNewLine]", 
    \(\($headvisited = Table[0, {i, 100}];\)\), "\[IndentingNewLine]", 
    \(\($startn = \($jstart\  = \ 1\);\)\ \), "\[IndentingNewLine]", 
    \(\($linkcomponent = 1;\)\), "\[IndentingNewLine]", 
    \(\(\($componentnum = 
        Table[0, {i, 
            100}];\)\(\[IndentingNewLine]\)\)\), "\[IndentingNewLine]", 
    \(\(\(StringLotate[str_] := \[IndentingNewLine]StringInsert[
        StringDrop[str, {1, 1}], StringTake[str, 1], 
        StringLength[
          str]]\)\(\[IndentingNewLine]\)\)\), "\[IndentingNewLine]", 
    \(\(\(CheckFirst[str_] := 
      Block[{i, len, ch, str1 = str}, \[IndentingNewLine]len = 
          StringLength[str1]; \[IndentingNewLine]ch = 
          StringTake[str1, 1]; \[IndentingNewLine]For[i = 1, 
          ch != "\<a\>"\  && \ 
            ch != "\<A\>"\ , \(i++\), \[IndentingNewLine]If[len < i, 
            Break[]]; \[IndentingNewLine]str1 = StringLotate[str1]; 
          ch = StringTake[str1, 1]]; \[IndentingNewLine]If[
          ch \[Equal] "\<a\>"\  || \ ch \[Equal] "\<A\>", \ Return[str1], 
          Return["\<\>"]]]\)\(\[IndentingNewLine]\)\)\), \
"\[IndentingNewLine]", 
    \(\(\(SameListQ[lst1_, lst2_] := 
      If[lst1[\([1]\)] \[Equal] lst2[\([1]\)]\  && \ 
          lst1[\([2]\)] \[Equal] lst2[\([2]\)], True, 
        False]\)\(\[IndentingNewLine]\)\)\), "\[IndentingNewLine]", 
    \(\(\(FindCrossing[i_, len_, $pdata_] := 
      Block[{j}, \[IndentingNewLine]For[j = 1, j \[LessEqual] 2*len, \(j++\), 
          If[i \[NotEqual] j\  && \ 
              SameListQ[$pdata[\([i]\)], $pdata[\([j]\)]], 
            Return[j]]]]\)\(\[IndentingNewLine]\)\)\), "\[IndentingNewLine]", \

    \(\(\(DownStream[n_, i_, j_, bindex_, bnum_, len_, plat_] := 
      Block[{i1, k1, k2}, \[IndentingNewLine] (*\ 
          n - th\ intersection\ \(point : \ i - th\ word\); \ 
          j - th\ generator\ *) \[IndentingNewLine]If[n > 2*len, 
          Return[n]]; \[IndentingNewLine]If[
          n > $startn\  && \ i \[Equal] 1\  && \ j == $jstart, 
          Return[n]]; \[IndentingNewLine]If[
          i \[Equal] 
            1, \($headvisited[\([j]\)]++\)]; \
\[IndentingNewLine]$componentnum[\([n]\)] = $linkcomponent; \
\[IndentingNewLine]For[i1 = i, 
          i1 \[LessEqual] len, \(i1++\), \[IndentingNewLine]If[j \[Equal] 1, 
            k1 = 0, k1 = plat[\([i1, j - 1]\)]]; \[IndentingNewLine]k2 = 
            plat[\([i1, j]\)]; \[IndentingNewLine]If[
            k1 \[NotEqual] 
              0\ , $pdata[\([n]\)] = {i1, j - 1}; $updown[\([n]\)] = {1, 
                k1}; \[IndentingNewLine]If[
              i1 \[Equal] len, \[IndentingNewLine]If[EvenQ[j - 1], 
                Return[UpStream[n + 1, len, j - 2, bindex, bnum, len, plat]], 
                Return[UpStream[n + 1, len, j, bindex, bnum, len, plat]]], 
              Return[DownStream[n + 1, i1 + 1, j - 1, bindex, bnum, len, 
                  plat]]]]; \[IndentingNewLine]If[
            k2 \[NotEqual] 
              0\ , $pdata[\([n]\)] = {i1, j}; $updown[\([n]\)] = {2, 
                k2}; \[IndentingNewLine]If[
              i1 \[Equal] len, \[IndentingNewLine]If[EvenQ[j + 1], 
                Return[UpStream[n + 1, len, j, bindex, bnum, len, plat]], 
                Return[UpStream[n + 1, len, j + 2, bindex, bnum, len, 
                    plat]]], 
              Return[DownStream[n + 1, i1 + 1, j + 1, bindex, bnum, len, 
                  plat]]]];\[IndentingNewLine]]; \[IndentingNewLine]If[
          EvenQ[j], Return[UpStream[n, len, j - 1, bindex, bnum, len, plat]], 
          Return[UpStream[n, len, j + 1, bindex, bnum, len, 
              plat]]]]\)\(\[IndentingNewLine]\)\)\), "\[IndentingNewLine]", 
    \(\(\(UpStream[n_, i_, j_, bindex_, bnum_, len_, plat_] := 
      Block[{i1, k1, k2}, \[IndentingNewLine]If[n > 2*len, 
          Return[n]]; \[IndentingNewLine]$componentnum[\([n]\)] = \
$linkcomponent; \[IndentingNewLine]For[i1 = i, 
          1 \[LessEqual] i1, \(i1--\), \[IndentingNewLine]If[j \[Equal] 1, 
            k1 = 0, k1 = plat[\([i1, j - 1]\)]]; \[IndentingNewLine]k2 = 
            plat[\([i1, j]\)]; \[IndentingNewLine]If[
            k1 \[NotEqual] 
              0\ , $pdata[\([n]\)] = {i1, j - 1}; $updown[\([n]\)] = {3, 
                k1}; \[IndentingNewLine]If[
              i1 \[Equal] 1, \[IndentingNewLine]If[
                EvenQ[j - 
                    1], \[IndentingNewLine]\($headvisited[\([j - 1]\)]++\); 
                Return[
                  DownStream[n + 1, 1, j - 2, bindex, bnum, len, 
                    plat]], \[IndentingNewLine]\($headvisited[\([j - 
                        1]\)]++\); 
                Return[DownStream[n + 1, 1, j, bindex, bnum, len, plat]]], 
              Return[UpStream[n + 1, i1 - 1, j - 1, bindex, bnum, len, 
                  plat]]]]; \[IndentingNewLine]If[
            k2 \[NotEqual] 
              0\ , $pdata[\([n]\)] = {i1, j}; $updown[\([n]\)] = {4, 
                k2}; \[IndentingNewLine]If[
              i1 \[Equal] 1, \[IndentingNewLine]If[
                EvenQ[j + 
                    1], \[IndentingNewLine]\($headvisited[\([j + 1]\)]++\); 
                Return[DownStream[n + 1, 1, j, bindex, bnum, len, 
                    plat]], \($headvisited[\([j + 1]\)]++\); 
                Return[DownStream[n + 1, 1, j + 2, bindex, bnum, len, 
                    plat]]], 
              Return[UpStream[n + 1, i1 - 1, j + 1, bindex, bnum, len, 
                  plat]]]];\[IndentingNewLine]]; \[IndentingNewLine]If[
          EvenQ[j], Return[DownStream[n, 1, j - 1, bindex, bnum, len, plat]], 
          Return[DownStream[n, 1, j + 1, bindex, bnum, len, 
              plat]]]]\)\(\[IndentingNewLine]\)\)\), "\[IndentingNewLine]", 
    \(\(\(CompNumInfo[len_, pd_] := 
      Block[{i, j, pos, s, nump = {}}, \[IndentingNewLine]For[i = 1, 
          i \[LessEqual] 2*len, \(i++\), \[IndentingNewLine]pos = 
            pd[\([i]\)]; \[IndentingNewLine]If[$componentnum[\([i]\)] \
\[NotEqual] 0, $componentnum[\([pos]\)] = 
              0]\[IndentingNewLine]]; \[IndentingNewLine]For[j = 1, 
          j <= $linkcomponent, \(j++\), \[IndentingNewLine]s = 
            0; \[IndentingNewLine]For[i = 1, 
            i \[LessEqual] 
              2*len, \(i++\), \[IndentingNewLine]If[$componentnum[\([i]\)] \
\[Equal] j, \(s++\)]]; \[IndentingNewLine]nump = 
            Append[nump, s]\[IndentingNewLine]]; \[IndentingNewLine]Return[
          nump]\[IndentingNewLine]]\)\(\[IndentingNewLine]\)\)\), "\
\[IndentingNewLine]", 
    \(\(\(CrossingInfo[len_, pd_] := 
      Block[{i, pos, pi, pj}, \[IndentingNewLine]For[i = 1, 
          i \[LessEqual] 2*len, \(i++\), \[IndentingNewLine]pos = 
            pd[\([i]\)]; \ \[IndentingNewLine]pi = \($updown[\([i]\)]\)[\([1]\
\)]; \ \[IndentingNewLine]pj = \($updown[\([pos]\)]\)[\([1]\)]; \
\[IndentingNewLine]If[
            pi \[Equal] 1\ \  && \ 
              pj \[Equal] 
                2, \[IndentingNewLine]If[\($updown[\([i]\)]\)[\([2]\)] > 
                0, $pdata[\([i]\)] = 2, \ $pdata[\([i]\)]\  = \ 
                3]]; \[IndentingNewLine]If[
            pi \[Equal] 2\ \  && \ 
              pj \[Equal] 
                1, \[IndentingNewLine]If[\($updown[\([i]\)]\)[\([2]\)] > 
                0, $pdata[\([i]\)] = 1, \ $pdata[\([i]\)]\  = 
                4]]; \[IndentingNewLine]If[
            pi \[Equal] 2\ \  && \ 
              pj \[Equal] 
                4, \[IndentingNewLine]If[\($updown[\([i]\)]\)[\([2]\)] > 
                0, $pdata[\([i]\)] = 3, \ $pdata[\([i]\)]\  = \ 
                2]]; \[IndentingNewLine]If[
            pi \[Equal] 4\ \  && \ 
              pj \[Equal] 
                2, \[IndentingNewLine]If[\($updown[\([i]\)]\)[\([2]\)] > 
                0, $pdata[\([i]\)] = 4, \ $pdata[\([i]\)]\  = \ 
                1]]; \[IndentingNewLine]If[
            pi \[Equal] 1\ \  && \ 
              pj \[Equal] 
                3, \[IndentingNewLine]If[\($updown[\([i]\)]\)[\([2]\)] > 
                0, $pdata[\([i]\)] = 4, \ $pdata[\([i]\)]\  = \ 
                1]]; \[IndentingNewLine]If[
            pi \[Equal] 3\ \  && \ 
              pj \[Equal] 
                1, \[IndentingNewLine]If[\($updown[\([i]\)]\)[\([2]\)] > 
                0, $pdata[\([i]\)] = 3, \ $pdata[\([i]\)]\  = \ 
                2]]; \[IndentingNewLine]If[
            pi \[Equal] 3\ \  && \ 
              pj \[Equal] 
                4, \[IndentingNewLine]If[\($updown[\([i]\)]\)[\([2]\)] > 
                0, $pdata[\([i]\)] = 1, \ $pdata[\([i]\)]\  = \ 
                4]]; \[IndentingNewLine]If[
            pi \[Equal] 4\ \  && \ 
              pj \[Equal] 
                3, \[IndentingNewLine]If[\($updown[\([i]\)]\)[\([2]\)] > 
                0, $pdata[\([i]\)] = 2, \ $pdata[\([i]\)]\  = \ 
                3]]]]\)\(\[IndentingNewLine]\)\)\), "\[IndentingNewLine]", 
    \(KnotFromPlat[str_] := 
      Block[{i, j, len, bnum, bindex, plat, pd, knot, 
          nump}, \[IndentingNewLine]len = 
          StringLength[str]; \[IndentingNewLine]For[i = 1, 
          i \[LessEqual] 
            2*len, \(i++\), $headvisited[\([i]\)] = \($pdata[\([i]\)] = \
\($componentnum[\([i]\)] = 0\)\)]; \[IndentingNewLine]pd = 
          Table[0, {i, 2*len}]; \[IndentingNewLine]bnum = 
          bwdtonumwd[str]; \[IndentingNewLine]bindex = 
          Max[Map[\((Abs[#])\) &, bnum]] + 1; \[IndentingNewLine]If[
          Mod[bindex, 2] \[Equal] 
            1, \[IndentingNewLine]Print["\<Wrong data !!! (All braids must \
have even strings for plat closure.)\>"]; 
          Return[str]]; \[IndentingNewLine]plat = 
          Table[0, {i, len}, {j, bindex}]; \[IndentingNewLine]For[i = 1, 
          i \[LessEqual] len, \(i++\), 
          plat[\([i, Abs[bnum[\([i]\)]]]\)] = 
            bnum[\([i]\)]]; \[IndentingNewLine]$startn = \($jstart = 
            1\); $linkcomponent = 1; \[IndentingNewLine]While[
          True, \[IndentingNewLine]$startn = 
            DownStream[$startn, 1, $jstart, bindex, bnum, len, 
              plat]; \[IndentingNewLine]If[$startn > 2*len, 
            Break[]]; \[IndentingNewLine]For[i = 1, 
            i \[LessEqual] 
              len, \(i++\), \[IndentingNewLine]If[$headvisited[\([i]\)] == 
                0, $jstart = i; \($linkcomponent++\); 
              Break[]]]\[IndentingNewLine]]; \[IndentingNewLine]For[i = 1, 
          i \[LessEqual] 2*len, \(i++\), 
          pd[\([i]\)] = 
            FindCrossing[i, len, $pdata]]; \[IndentingNewLine]nump = 
          CompNumInfo[len, pd]; \[IndentingNewLine]CrossingInfo[len, 
          pd]; \[IndentingNewLine]knot = {}; \[IndentingNewLine]For[i = 1, 
          i \[LessEqual] 
            2*len, \(i++\), \[IndentingNewLine]If[$pdata[\([i]\)] == 1, 
            knot = Append[
                knot, \(-pd[\([i]\)]\)]]; \
\[IndentingNewLine]If[$pdata[\([i]\)] == 3, 
            knot = Append[knot, 
                pd[\([i]\)]]]]; \[IndentingNewLine]Return[{nump, 
            knot}]]\)}], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(General::"spell1" \(\(:\)\(\ \)\) 
      "Possible spelling error: new symbol name \"\!\($pdata\)\" is similar \
to existing symbol \"\!\(pdata\)\"."\)], "Message"]
}, Open  ]],

Cell[BoxData[
    \(\[IndentingNewLine]\)], "Input",
  InitializationCell->True],

Cell[BoxData[{
    \(\(\(TangleResolution[type_] := 
      Block[{ret, \ link}, \[IndentingNewLine]link = 
          Install["\<./kicktangle\>", \ 
            LinkMode -> Launch]; \[IndentingNewLine]ret = 
          kicktangleknot[type]; \[IndentingNewLine]Uninstall[
          link]; \[IndentingNewLine]If[
          First[ret] \[Equal] 
            1, \[IndentingNewLine]Return[{{ret[\([2]\)], 
                ToExpression[ret[\([4]\)]]}, {ret[\([3]\)], 
                ToExpression[ret[\([5]\)]]}}], 
          Print[ret[\([4]\)]]]\[IndentingNewLine]]\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(HOMFLYbyTangleDecomposition[t1_List, t2_List] := 
      Block[{a1, a2, b1, b2, x, y}, \[IndentingNewLine]a1 = t1[\([1, 2]\)]; 
        b1 = t1[\([2, 2]\)]; \[IndentingNewLine]a2 = t2[\([1, 2]\)]; 
        b2 = t2[\([2, 2]\)]; \[IndentingNewLine]If[
          t1[\([1, 1]\)] \[Equal] 0\  && \ t2[\([1, 1]\)] \[Equal] 0, \ 
          Return[Simplify[
              a1*a2*\((x + y)\) + a1*b2 + b1*a2 + 
                b1*b2*\((1/x - y \((x + y)\)/x)\)]]]; \[IndentingNewLine]If[
          t1[\([1, 1]\)] \[Equal] 0\  && \ t2[\([1, 1]\)] \[Equal] 4, \ 
          Return[Simplify[
              a1*a2 + a1*b2*\((x + y)\) + b1*a2*\((1/x - y \((x + y)\)/x)\) + 
                b1*b2]]]; \[IndentingNewLine]If[
          t1[\([1, 1]\)] \[Equal] 1\  && \ t2[\([1, 1]\)] \[Equal] 1, \ 
          Return[Simplify[
              a1*a2*\((x + y)\) + a1*b2 + b1*a2 + 
                b1*b2*\((x + y)\)]]]; \[IndentingNewLine]If[
          t1[\([1, 1]\)] \[Equal] 1\  && \ t2[\([1, 1]\)] \[Equal] 3, \ 
          Return[Simplify[
              a1*a2 + a1*b2*\((x + y)\) + b1*a2*\((x + y)\) + 
                b1*b2]]]; \[IndentingNewLine]If[
          t1[\([1, 1]\)] \[Equal] 2\  && \ t2[\([1, 1]\)] \[Equal] 2, \ 
          Return[Simplify[
              a1*a2*\((x + y)\) + a1*b2 + b1*a2 + 
                b1*b2*\((1/x - y \((x + y)\)/x)\)]]]; \[IndentingNewLine]If[
          t1[\([1, 1]\)] \[Equal] 2\  && \ t2[\([1, 1]\)] \[Equal] 5, \ 
          Return[Simplify[
              a1*a2 + a1*b2*\((x + y)\) + b1*a2*\((x + y)\) + 
                b1*b2]]]; \[IndentingNewLine]If[
          t1[\([1, 1]\)] \[Equal] 3\  && \ t2[\([1, 1]\)] \[Equal] 3, \ 
          Return[Simplify[
              a1*a2*\((x + y)\) + a1*b2 + b1*a2 + 
                b1*b2*\((x + y)\)]]]; \[IndentingNewLine]If[
          t1[\([1, 1]\)] \[Equal] 3\  && \ t2[\([1, 1]\)] \[Equal] 1, \ 
          Return[Simplify[
              a1*a2 + a1*b2*\((x + y)\) + b1*a2*\((x + y)\) + 
                b1*b2]]]; \[IndentingNewLine]If[
          t1[\([1, 1]\)] \[Equal] 4\  && \ t2[\([1, 1]\)] \[Equal] 4, \ 
          Return[Simplify[
              a1*a2*\((1/x - y \((x + y)\)/x)\) + a1*b2 + b1*a2 + 
                b1*b2*\((x + y)\)]]]; \[IndentingNewLine]If[
          t1[\([1, 1]\)] \[Equal] 4\  && \ t2[\([1, 1]\)] \[Equal] 0, \ 
          Return[Simplify[
              a1*a2 + a1*b2*\((1/x - y \((x + y)\)/x)\) + b1*a2*\((x + y)\) + 
                b1*b2]]]; \[IndentingNewLine]If[
          t1[\([1, 1]\)] \[Equal] 5\  && \ t2[\([1, 1]\)] \[Equal] 5, \ 
          Return[Simplify[
              a1*a2*\((1/x - y \((x + y)\)/x)\) + a1*b2 + b1*a2 + 
                b1*b2*\((x + y)\)]]]; \[IndentingNewLine]If[
          t1[\([1, 1]\)] \[Equal] 5\  && \ t2[\([1, 1]\)] \[Equal] 2, \ 
          Return[Simplify[
              a1*a2 + a1*b2*\((1/x - y \((x + y)\)/x)\) + b1*a2*\((x + y)\) + 
                b1*b2]]]; \[IndentingNewLine]Print["\<Undefined tangle \
decomposition\>"]]\)}], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(End[]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(EndPackage[]\)], "Input",
  InitializationCell->True]
},
FrontEndVersion->"5.2 for Microsoft Windows",
ScreenRectangle->{{0, 1024}, {0, 685}},
AutoGeneratedPackage->Automatic,
WindowSize->{1016, 651},
WindowMargins->{{0, Automatic}, {Automatic, 0}}
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{
Cell[1754, 51, 97, 2, 30, "Input",
  InitializationCell->True],
Cell[1854, 55, 969, 14, 210, "Input",
  InitializationCell->True],
Cell[2826, 71, 502, 8, 130, "Input",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[3353, 83, 371, 6, 110, "Input",
  InitializationCell->True],
Cell[3727, 91, 279, 4, 48, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[4043, 100, 374, 6, 110, "Input",
  InitializationCell->True],
Cell[4420, 108, 279, 4, 48, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[4736, 117, 349, 6, 90, "Input",
  InitializationCell->True],
Cell[5088, 125, 276, 4, 48, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[5401, 134, 415, 6, 130, "Input",
  InitializationCell->True],
Cell[5819, 142, 298, 4, 67, "Output"]
}, Open  ]],
Cell[6132, 149, 368, 6, 110, "Input",
  InitializationCell->True],
Cell[6503, 157, 238, 5, 70, "Input",
  InitializationCell->True],
Cell[6744, 164, 428, 8, 130, "Input",
  InitializationCell->True],
Cell[7175, 174, 743, 13, 170, "Input",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[7943, 191, 413, 7, 130, "Input",
  InitializationCell->True],
Cell[8359, 200, 317, 4, 67, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[8713, 209, 528, 9, 150, "Input",
  InitializationCell->True],
Cell[9244, 220, 424, 6, 67, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[9705, 231, 559, 8, 130, "Input",
  InitializationCell->True],
Cell[10267, 241, 469, 6, 86, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[10773, 252, 229, 4, 70, "Input",
  InitializationCell->True],
Cell[11005, 258, 142, 2, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[11184, 265, 332, 5, 90, "Input",
  InitializationCell->True],
Cell[11519, 272, 237, 3, 48, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[11793, 280, 504, 8, 130, "Input",
  InitializationCell->True],
Cell[12300, 290, 395, 6, 67, "Output"]
}, Open  ]],
Cell[12710, 299, 150, 3, 30, "Input",
  InitializationCell->True],
Cell[12863, 304, 545, 10, 110, "Input",
  InitializationCell->True],
Cell[13411, 316, 386, 6, 70, "Input",
  InitializationCell->True],
Cell[13800, 324, 83, 2, 30, "Input",
  InitializationCell->True],
Cell[13886, 328, 91, 2, 30, "Input",
  InitializationCell->True],
Cell[13980, 332, 449, 9, 190, "Input",
  InitializationCell->True],
Cell[14432, 343, 798, 13, 210, "Input",
  InitializationCell->True],
Cell[15233, 358, 1334, 24, 390, "Input",
  InitializationCell->True],
Cell[16570, 384, 184, 4, 50, "Input",
  InitializationCell->True],
Cell[16757, 390, 612, 12, 310, "Input",
  InitializationCell->True],
Cell[17372, 404, 54, 1, 30, "Input",
  InitializationCell->True],
Cell[17429, 407, 1582, 28, 470, "Input",
  InitializationCell->True],
Cell[19014, 437, 54, 1, 30, "Input",
  InitializationCell->True],
Cell[19071, 440, 826, 15, 270, "Input",
  InitializationCell->True],
Cell[19900, 457, 54, 1, 30, "Input",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[19979, 462, 1109, 22, 230, "Input",
  InitializationCell->True],
Cell[21091, 486, 180, 3, 22, "Message"],
Cell[21274, 491, 182, 3, 22, "Message"]
}, Open  ]],
Cell[21471, 497, 884, 19, 170, "Input",
  InitializationCell->True],
Cell[22358, 518, 80, 2, 50, "Input",
  InitializationCell->True],
Cell[22441, 522, 3859, 64, 1230, "Input",
  InitializationCell->True],
Cell[26303, 588, 80, 2, 50, "Input",
  InitializationCell->True],
Cell[26386, 592, 490, 9, 210, "Input",
  InitializationCell->True],
Cell[26879, 603, 63, 2, 50, "Input",
  InitializationCell->True],
Cell[26945, 607, 1624, 32, 470, "Input",
  InitializationCell->True],
Cell[28572, 641, 1477, 29, 430, "Input",
  InitializationCell->True],
Cell[30052, 672, 80, 2, 50, "Input",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[30157, 678, 1314, 24, 390, "Input",
  InitializationCell->True],
Cell[31474, 704, 185, 3, 22, "Message"]
}, Open  ]],
Cell[31674, 710, 63, 2, 50, "Input",
  InitializationCell->True],
Cell[31740, 714, 852, 16, 270, "Input",
  InitializationCell->True],
Cell[32595, 732, 1018, 19, 310, "Input",
  InitializationCell->True],
Cell[33616, 753, 773, 14, 250, "Input",
  InitializationCell->True],
Cell[34392, 769, 1334, 24, 390, "Input",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[35751, 797, 1354, 24, 350, "Input",
  InitializationCell->True],
Cell[37108, 823, 180, 3, 22, "Message"]
}, Open  ]],
Cell[37303, 829, 1812, 33, 490, "Input",
  InitializationCell->True],
Cell[39118, 864, 63, 2, 50, "Input",
  InitializationCell->True],
Cell[39184, 868, 2272, 40, 613, "Input",
  InitializationCell->True],
Cell[41459, 910, 80, 2, 50, "Input",
  InitializationCell->True],
Cell[41542, 914, 1304, 24, 370, "Input",
  InitializationCell->True],
Cell[42849, 940, 80, 2, 50, "Input",
  InitializationCell->True],
Cell[42932, 944, 1764, 32, 490, "Input",
  InitializationCell->True],
Cell[44699, 978, 80, 2, 50, "Input",
  InitializationCell->True],
Cell[44782, 982, 356, 6, 130, "Input",
  InitializationCell->True],
Cell[45141, 990, 80, 2, 50, "Input",
  InitializationCell->True],
Cell[45224, 994, 431, 9, 130, "Input",
  InitializationCell->True],
Cell[45658, 1005, 439, 9, 130, "Input",
  InitializationCell->True],
Cell[46100, 1016, 80, 2, 50, "Input",
  InitializationCell->True],
Cell[46183, 1020, 355, 7, 110, "Input",
  InitializationCell->True],
Cell[46541, 1029, 80, 2, 50, "Input",
  InitializationCell->True],
Cell[46624, 1033, 513, 9, 170, "Input",
  InitializationCell->True],
Cell[47140, 1044, 80, 2, 50, "Input",
  InitializationCell->True],
Cell[47223, 1048, 1191, 22, 410, "Input",
  InitializationCell->True],
Cell[48417, 1072, 80, 2, 50, "Input",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[48522, 1078, 1046, 18, 310, "Input",
  InitializationCell->True],
Cell[49571, 1098, 205, 3, 22, "Message"]
}, Open  ]],
Cell[49791, 1104, 80, 2, 50, "Input",
  InitializationCell->True],
Cell[49874, 1108, 2824, 47, 830, "Input",
  InitializationCell->True],
Cell[52701, 1157, 6858, 106, 670, "Input",
  InitializationCell->True],
Cell[59562, 1265, 3747, 68, 1050, "Input",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[63334, 1337, 139481, 3072, 5050, "Input",
  InitializationCell->True],
Cell[202818, 4411, 184, 3, 22, "Message"],
Cell[203005, 4416, 190, 3, 22, "Message"]
}, Open  ]],
Cell[203210, 4422, 9174, 168, 2590, "Input",
  InitializationCell->True],
Cell[212387, 4592, 80, 2, 50, "Input",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[212492, 4598, 11141, 204, 2510, "Input",
  InitializationCell->True],
Cell[223636, 4804, 184, 3, 22, "Message"]
}, Open  ]],
Cell[223835, 4810, 80, 2, 50, "Input",
  InitializationCell->True],
Cell[223918, 4814, 3612, 66, 490, "Input",
  InitializationCell->True],
Cell[227533, 4882, 66, 2, 30, "Input",
  InitializationCell->True],
Cell[227602, 4886, 73, 2, 30, "Input",
  InitializationCell->True]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

